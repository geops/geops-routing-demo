{"version":3,"sources":["store/actions/Map.jsx","store/actions/actionTypes.js","constants.js","utils.jsx","Components/SearchResults/SearchResults.jsx","Components/SearchResults/index.js","Components/TrackSelect/TrackSelect.jsx","store/prop-types.js","Components/SearchField/SearchField.jsx","Components/SearchField/index.js","Components/RoutingMenu/RoutingMenu.jsx","Components/RoutingMenu/index.js","Components/RouteInfosDialog/interpolated_surface.svg","Components/RouteInfosDialog/surface_elevation.svg","Components/RouteInfosDialog/RouteInfosDialog.jsx","Components/RouteInfosDialog/index.js","config/styleConfig.js","Components/MapComponent/MapComponent.jsx","Components/MapComponent/index.js","Components/Permalink/Permalink.jsx","Components/Permalink/index.js","Components/NotificationHandler/NotificationHandler.jsx","Components/NotificationHandler/index.js","Components/App/App.jsx","Components/App/index.js","store/reducers/Map.jsx","store/store.js","serviceWorker.js","index.js"],"names":["setCenter","center","type","setCurrentStops","currentStops","setCurrentStopsGeoJSON","currentStopsGeoJSON","setCurrentMot","currentMot","showNotification","notificationMessage","notificationType","setIsFieldFocused","isFieldFocused","setShowLoadingBar","showLoadingBar","setSelectedRoutes","selectedRoutes","setIsRouteInfoOpen","isRouteInfoOpen","setTracks","tracks","DEFAULT_MOTS","OTHER_MOTS","VALID_MOTS","GRAPHHOPPER_MOTS","findMotIcon","name","result","capitalName","charAt","toUpperCase","slice","title","to4326","coord","decimal","transform","map","c","toFixed","to3857","renderSecondary","id","code","countryCode","ifopt","display","push","filter","l","join","SearchResults","props","currentSearchResults","processClickedResultHandler","useSelector","state","MapReducer","olMap","useState","maxHeight","setMaxHeight","ListRef","useRef","updateMenuHeight","useCallback","newMaxheight","current","getTarget","getBoundingClientRect","bottom","top","useEffect","olEventKey","on","unByKey","length","Paper","square","elevation","ref","List","component","className","aria-label","style","overflowY","paddingBottom","paddingTop","searchResult","index","ListItem","onClick","button","key","nextId","ListItemIcon","ListItemText","primary","properties","secondary","country_code","selected","defaultProps","useStyles","makeStyles","theme","wrapper","width","padding","breakpoints","down","selectStyles","select","paddingRight","icon","height","TrackSelect","disabled","classes","selectClasses","dispatch","useDispatch","track","useMemo","tracksValues","platforms","sort","a","b","parseInt","FormControl","Select","renderValue","val","labelId","value","displayEmpty","onChange","evt","newTracks","target","t","MenuItem","propTypeCoordinates","PropTypes","arrayOf","number","isRequired","geometry","shape","string","feature","oneOfType","currentStop","features","gridContainer","boxSizing","color","fieldWrapper","maxWidth","marginLeft","buttonWrapper","SearchField","addNewSearchFieldHandler","removeSearchFieldHandler","searchStopsHandler","singleStop","processHighlightedResultSelectHandler","onFieldFocusHandler","onPanViaClick","inputReference","fieldLeftIcon","searchFieldSize","searchFieldLabel","fieldRightIcon","isStationName","addNextHopDisabled","Tooltip","IconButton","size","fontSize","Grid","item","xs","container","spacing","alignItems","TextField","inputRef","label","e","Array","isArray","onKeyDown","onFocus","onBlur","setTimeout","event","TabPanel","children","Typography","role","hidden","aria-labelledby","tabs","tab","minWidth","dropDown","backgroundColor","textAlign","selectInput","checkbox","margin","abortController","AbortController","RoutingMenu","mots","stationSearchUrl","APIKey","isActiveRoute","onZoomRouteClick","onDrawNewRoute","validateMots","motsArray","validationMots","currentMotsArray","mot","includes","forEach","providedMot","requestedMot","find","currentMotsVal","otherMotsVal","clickLocation","elRefs","React","fill","el","i","createRef","currentMots","otherMots","lastChangedFieldIdx","setLastChangedFieldIdx","setCurrentSearchResults","searchMotOnly","setSearchMotOnly","focusedFieldIndex","setFocusedFieldIndex","undefined","currentOtherMot","setCurrentOtherMot","updateCurrentStops","updatedCurrentStops","updatedCurrentStopsGeoJSON","updatedFocusedFieldIndex","updateFieldOnMapClick","_","clone","tempGeoJSON","reverse","coordinates","updatedTracks","handleMotChange","newMot","tracksVal","fieldIndex","currStops","indexToInsertAt","splice","Object","keys","k","indexToRemoveFrom","abort","signal","reqUrl","fetch","then","response","json","error","catch","err","console","warn","firstSearchResult","updateCurrentSearchResults","toString","Tabs","indicatorColor","textColor","singleMot","Tab","root","disableUnderline","onDragEnd","destination","source","removed","newSource","input","indexA","indexB","temp","swapFc","droppableId","provided","droppableProps","innerRef","background","draggableId","prov","snpsht","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","placeholder","Checkbox","checked","inputProps","Button","variant","startIcon","LinearProgress","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","strokeWidth","stroke","d","_ref","svgRef","viewBox","ForwardRef","forwardRef","tickFormatter","isMeter","Math","round","everyNth","arr","interval","start","getTooltipX","dist","xPosition","RouteInfosDialog","alt","maxAlt","routes","hoveredCoords","onHighlightPoint","clearHighlightPoint","hoveredPoint","setHoveredPoint","setLength","minAltitude","setMinAltitude","maxAltitude","setMaxAltitude","routePoints","setRoutePoints","distanceUnit","setDistanceUnit","setIsMeter","dialogPosition","pointArray","coords","concat","r","getGeometry","getFlatCoordinates","distances","get","lgth","reduce","xArray","yArray","altitudesArray","surfaceElevation","min","max","idx","xVal","yVal","distance","Dialog","isOpen","isDraggable","onDragStop","position","setDialogPosition","x","lastX","y","lastY","classNameHeader","classNameCloseBt","cancelDraggable","onClose","data","onMouseLeave","axisLine","tickLine","domain","offset","dataKey","vertical","dot","cursor","content","hovCoords","linePoints","routeLine","format","GeoJSON","line","combine","writeFeaturesObject","dataProjection","featureProjection","hoveredFeat","Feature","Point","pt","writeFeatureObject","turfClosestPt","nearestPointOnLine","lineCoordinates","nearestPts","nearestPt","prev","curr","goal","abs","hoveredLineIdx","nearestPtIndex","point","renderPrograTooltip","tooltipProps","payload","renderTooltip","memo","lineStyler","lineStyle","Style","Stroke","lineDash","railLineStyle","railLineHoveredStyle","busLineStyle","busLineHoveredStyle","pedestrianLineStyle","pedestrianLineHoveredStyle","carLineStyle","carLineHoveredStyle","othersLineStyle","othersLineHoveredStyle","railPointStyle","image","Circle","radius","Fill","pedestrianPointStyle","carPointStyle","busPointStyle","othersPointStyle","pointStyleFunction","lineStyleFunction","isHovered","MapComponent","onMapMoved","onSetCenter","newCenter","getView","getCenter","drawNewRoute","useElevation","hops","routingUrl","resolveHops","onShowNotification","onSetShowLoadingBar","onSetSelectedRoutes","uid","calculateElevation","routeVectorSource","clear","addFeatures","readFeatures","setIsActiveRoute","getFeatures","routeVectorLayer","olLayer","setStyle","onSetClickLocation","mapRef","hoveredFeature","hoveredRoute","initialRouteDrag","hoveredStationOpen","hoveredStationName","bind","projection","layerService","LayerService","ConfigReader","readConfig","visible","isBaseLayer","url","VectorSource","addLayer","Layer","VectorLayer","zIndex","highlightVectorSource","markerVectorSource","markerVectorLayer","getLayer","layers","getLayers","translate","Translate","hitTolerance","featureIndex","onSetTracks","onSetCurrentStops","onSetCurrentStopsGeoJSON","newCurrentStops","newCurentStopsGeoJSON","getArray","getProperties","findIndex","coordinate","modify","Modify","pixelTolerance","condition","mapBrowserEvent","newHopIdx","flatCoords","f","lineString","getFirstCoordinate","getLastCoordinate","closestSegment","getClosestFeatureToCoordinate","closestEdges","segment","every","defaultInteractions","extend","interaction","addInteraction","featExtent","getExtent","Number","isFinite","fit","getSize","duration","featureCoord","animate","setState","getFeaturesAtPixel","pixel","getType","featCountryCode","flatCoordinates","prevProps","currentMotChanged","tracksChanged","currentStopsGeoJSONChanged","feat","node","Snackbar","anchorOrigin","horizontal","open","message","BasicMap","onFeaturesHover","zoom","tabIndex","viewOptions","Component","getExtentCenter","extent","indexInGeom","lineGeom","connect","actions","getGeoJson","viaString","split","geoJson","coordArray","isNaN","parseFloat","validateUrlCoordinates","coords3857","Promise","resolve","test","replace","Permalink","urlSearch","qs","parse","window","location","search","appState","params","setParams","newParams","z","setZoom","via","viaArray","geoJsonArray","stop","all","values","geoJsonObject","setResolveHops","getZoom","currentStopsGeoJson","compileViaString","NotificationHandler","handleOpen","handleClose","autoHideDuration","Alert","severity","createMuiTheme","typography","body","h1","h2","h3","h4","h5","h6","App","apiKey","process","ThemeProvider","initialState","Map","controls","action","updatedState","setClickLocation","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84b37975.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\n\nexport const setCenter = center => {\n  return {\n    type: actionTypes.SET_CENTER,\n    center,\n  };\n};\n\nexport const setCurrentStops = currentStops => {\n  return {\n    type: actionTypes.SET_CURRENT_STOPS,\n    currentStops,\n  };\n};\n\nexport const setCurrentStopsGeoJSON = currentStopsGeoJSON => {\n  return {\n    type: actionTypes.SET_CURRENT_STOPS_GEOJSON,\n    currentStopsGeoJSON,\n  };\n};\n\nexport const setCurrentMot = currentMot => {\n  return {\n    type: actionTypes.SET_CURRENT_MOT,\n    currentMot,\n  };\n};\n\nexport const setClickLocation = clickLocation => {\n  return {\n    type: actionTypes.SET_CLICK_LOCATION,\n    clickLocation,\n  };\n};\n\nexport const showNotification = (notificationMessage, notificationType) => {\n  return {\n    type: actionTypes.SHOW_NOTIFICATION,\n    notificationMessage,\n    notificationType,\n  };\n};\n\nexport const setIsFieldFocused = isFieldFocused => {\n  return {\n    type: actionTypes.SET_IS_FIELD_FOCUSED,\n    isFieldFocused,\n  };\n};\n\nexport const setShowLoadingBar = showLoadingBar => {\n  return {\n    type: actionTypes.SET_SHOW_LOADING_BAR,\n    showLoadingBar,\n  };\n};\n\nexport const setSelectedRoutes = selectedRoutes => {\n  return {\n    type: actionTypes.SET_SELECTED_ROUTES,\n    selectedRoutes,\n  };\n};\n\nexport const setIsRouteInfoOpen = isRouteInfoOpen => {\n  return {\n    type: actionTypes.SET_IS_ROUTE_INFO_OPEN,\n    isRouteInfoOpen,\n  };\n};\n\nexport const setDialogPosition = dialogPosition => {\n  return {\n    type: actionTypes.SET_DIALOG_POSITION,\n    dialogPosition,\n  };\n};\n\nexport const setResolveHops = resolveHops => {\n  return {\n    type: actionTypes.SET_RESOLVE_HOPS,\n    resolveHops,\n  };\n};\n\nexport const setTracks = tracks => {\n  return {\n    type: actionTypes.SET_TRACKS,\n    tracks,\n  };\n};\n","export const SET_CENTER = 'SET_CENTER';\nexport const SET_CURRENT_STOPS = 'SET_CURRENT_STOPS';\nexport const SET_CURRENT_STOPS_GEOJSON = 'SET_CURRENT_STOPS_GEOJSON';\nexport const SET_CURRENT_MOT = 'SET_CURRENT_MOT';\nexport const SET_CLICK_LOCATION = 'SET_CLICK_LOCATION';\nexport const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION';\nexport const SET_IS_FIELD_FOCUSED = 'SET_IS_FIELD_FOCUSED';\nexport const SET_SHOW_LOADING_BAR = 'SET_SHOW_LOADING_BAR';\nexport const SET_SELECTED_ROUTES = 'SET_SELECTED_ROUTES';\nexport const SET_IS_ROUTE_INFO_OPEN = 'SET_IS_ROUTE_INFO_OPEN';\nexport const SET_DIALOG_POSITION = 'SET_DIALOG_POSITION';\nexport const SET_RESOLVE_HOPS = 'SET_RESOLVE_HOPS';\nexport const SET_TRACKS = 'SET_TRACKS';\n","/**\n * The valid supported mots by the application\n * @type {string[]}\n * @category Constants\n */\nexport const DEFAULT_MOTS = ['rail', 'bus', 'foot'];\n\nexport const OTHER_MOTS = [\n  'tram',\n  'coach',\n  'subway',\n  'gondola',\n  'funicular',\n  'ferry',\n  'car',\n];\n\nexport const VALID_MOTS = [...DEFAULT_MOTS, ...OTHER_MOTS];\n\nexport const GRAPHHOPPER_MOTS = ['foot', 'car'];\n","import DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport DirectionsRailwayIcon from '@material-ui/icons/DirectionsRailway';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\nimport React from 'react';\nimport { transform } from 'ol/proj';\n\n/**\n * Map each mot to an icon\n * @param {string} name The name of the mot, ex('bus' or 'train')\n * @returns {Icon} MotIcon\n * @category Utils\n */\nexport const findMotIcon = name => {\n  let result = null;\n  const capitalName = name.charAt(0).toUpperCase() + name.slice(1);\n  switch (name) {\n    case 'rail':\n      result = <DirectionsRailwayIcon />;\n      break;\n    case 'foot':\n      result = <DirectionsWalkIcon />;\n      break;\n    default:\n      result = <DirectionsBusIcon />;\n      break;\n  }\n  return <span title={capitalName}>{result}</span>;\n};\n\nexport const to4326 = (coord, decimal = 5) => {\n  return transform(coord, 'EPSG:3857', 'EPSG:4326').map(c =>\n    c.toFixed(decimal),\n  );\n};\n\nexport const to3857 = coord => {\n  return transform(coord, 'EPSG:4326', 'EPSG:3857');\n};\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport nextId from 'react-id-generator';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MapMarkerIcon from '@material-ui/icons/LocationOn';\nimport { unByKey } from 'ol/Observable';\n\nimport './SearchResults.scss';\n\nconst renderSecondary = (id, code, countryCode, ifopt) => {\n  const display = [];\n\n  if (countryCode) {\n    display.push(\n      `${countryCode}${id || code ? ':' : ''}${id ? ` ${id}` : ''}${\n        code ? ` ${code}` : ''\n      }`,\n    );\n  } else {\n    display.push(\n      `${id ? `${id}` : ''}${id && code ? ' ' : ''}${code ? `${code}` : ''}`,\n    );\n  }\n  if (ifopt) {\n    display.push(`ifopt: ${ifopt}`);\n  }\n  return display.filter(l => l !== '').join(', ');\n};\n\n/**\n * The component that displays the station search results\n * @category RoutingMenu\n */\nfunction SearchResults(props) {\n  const { currentSearchResults, processClickedResultHandler } = props;\n  const map = useSelector(state => state.MapReducer.olMap);\n  const [maxHeight, setMaxHeight] = useState(null);\n  const ListRef = useRef();\n\n  const updateMenuHeight = useCallback(() => {\n    let newMaxheight;\n\n    if (ListRef.current) {\n      const mapBottom = map.getTarget().getBoundingClientRect().bottom;\n      const elemRect = ListRef.current.getBoundingClientRect();\n      newMaxheight = mapBottom - elemRect.top - 35;\n    }\n\n    if (newMaxheight >= 0) {\n      setMaxHeight(newMaxheight);\n    }\n  }, [map]);\n\n  useEffect(() => {\n    const olEventKey = map.on('change:size', () => updateMenuHeight());\n\n    return () => {\n      unByKey(olEventKey);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    updateMenuHeight();\n  }, [updateMenuHeight, currentSearchResults]);\n\n  if (currentSearchResults.length === 0) {\n    return null;\n  }\n  return (\n    <Paper square elevation={3} ref={ListRef}>\n      <List\n        component=\"nav\"\n        className=\"rd-result-list\"\n        aria-label=\"search results\"\n        style={{\n          maxHeight,\n          overflowY: 'scroll',\n          paddingBottom: 0,\n          paddingTop: 0,\n        }}\n      >\n        {currentSearchResults.map((searchResult, index) => {\n          if (index !== 0) {\n            return (\n              <ListItem\n                onClick={() => {\n                  processClickedResultHandler(searchResult);\n                }}\n                button\n                key={nextId()}\n              >\n                <ListItemIcon>\n                  <MapMarkerIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primary={searchResult.properties.name}\n                  secondary={renderSecondary(\n                    searchResult.properties.id,\n                    searchResult.properties.code,\n                    searchResult.properties.country_code,\n                    searchResult.properties.ifopt,\n                  )}\n                />\n              </ListItem>\n            );\n          }\n          // First item\n          return (\n            <ListItem\n              onClick={() => processClickedResultHandler(searchResult)}\n              button\n              selected\n              key={`searchResult-${searchResult.properties.name}`}\n            >\n              <ListItemIcon>\n                <MapMarkerIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={searchResult.properties.name}\n                secondary={renderSecondary(\n                  searchResult.properties.id,\n                  searchResult.properties.code,\n                  searchResult.properties.country_code,\n                  searchResult.properties.ifopt,\n                )}\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Paper>\n  );\n}\n\nSearchResults.propTypes = {\n  currentSearchResults: PropTypes.arrayOf(PropTypes.object),\n  processClickedResultHandler: PropTypes.func.isRequired,\n};\n\nSearchResults.defaultProps = {\n  currentSearchResults: [],\n};\n\nexport default SearchResults;\n","import SearchResults from './SearchResults';\n\nexport default SearchResults;\n","import React, { useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { setTracks } from '../../store/actions/Map';\n\nconst propTypes = {\n  index: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    width: '12%',\n    padding: '0 10px 4px 10px',\n    [theme.breakpoints.down('xs')]: {\n      padding: '0 5px 4px 5px',\n    },\n  },\n}));\n\nconst selectStyles = makeStyles(() => ({\n  select: {\n    paddingRight: '17px !important',\n  },\n  icon: {\n    width: '0.8em',\n    height: '0.8em',\n  },\n}));\n\n/**\n * The component that displays the track selector\n */\nfunction TrackSelect({ index, disabled }) {\n  const classes = useStyles();\n  const selectClasses = selectStyles();\n  const dispatch = useDispatch();\n  const tracks = useSelector(state => state.MapReducer.tracks);\n  const currentMot = useSelector(state => state.MapReducer.currentMot);\n  const currentStopsGeoJSON = useSelector(\n    state => state.MapReducer.currentStopsGeoJSON,\n  );\n  const track = useMemo(() => tracks[index], [index, tracks]);\n\n  const tracksValues = useMemo(() => {\n    return currentStopsGeoJSON[index] &&\n      currentStopsGeoJSON[index].properties &&\n      currentStopsGeoJSON[index].properties.platforms &&\n      currentStopsGeoJSON[index].properties.platforms[currentMot]\n      ? [\n          '',\n          ...currentStopsGeoJSON[index].properties.platforms[currentMot].sort(\n            (a, b) => {\n              return parseInt(a, 10) - parseInt(b, 10);\n            },\n          ),\n        ]\n      : [];\n  }, [index, currentMot, currentStopsGeoJSON]);\n\n  return (\n    <FormControl className={classes.wrapper}>\n      <Select\n        classes={selectClasses}\n        renderValue={val => (val === '' ? '-' : val)}\n        labelId=\"rd-track-select-label\"\n        value={track || ''}\n        displayEmpty\n        disabled={disabled || !tracksValues.length}\n        onChange={evt => {\n          const newTracks = [...tracks];\n          const { value } = evt.target;\n          newTracks[index] = value;\n          dispatch(setTracks(newTracks));\n        }}\n      >\n        {tracksValues.map(t => {\n          return (\n            <MenuItem value={t} key={`track-${t}`}>\n              {t === '' ? '-' : t}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n\nTrackSelect.propTypes = propTypes;\n\nexport default TrackSelect;\n","import PropTypes from 'prop-types';\n\nconst propTypeCoordinates = PropTypes.arrayOf(PropTypes.number.isRequired)\n  .isRequired;\n\nconst geometry = PropTypes.shape({\n  propTypeCoordinates,\n  type: PropTypes.string.isRequired,\n});\n\nconst feature = PropTypes.shape({\n  geometry,\n  properties: PropTypes.shape({\n    id: PropTypes.oneOfType([\n      PropTypes.string.isRequired,\n      PropTypes.string.isRequired,\n    ]),\n    type: PropTypes.string.isRequired,\n  }),\n  type: PropTypes.string.isRequired,\n});\n\nconst currentStop = PropTypes.shape({\n  features: PropTypes.shape({\n    '0': PropTypes.oneOfType([feature, propTypeCoordinates]),\n    '1': PropTypes.oneOfType([feature, propTypeCoordinates]),\n  }),\n  type: PropTypes.string.isRequired,\n});\n\nconst propTypeCurrentStopsGeoJSON = PropTypes.shape({\n  '0': currentStop,\n  '1': currentStop,\n});\n\nconst propTypeCurrentStops = PropTypes.arrayOf(\n  PropTypes.oneOfType([PropTypes.string.isRequired, propTypeCoordinates]),\n);\n\nexport {\n  propTypeCoordinates,\n  propTypeCurrentStops,\n  propTypeCurrentStopsGeoJSON,\n};\n","import React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Adjust from '@material-ui/icons/Adjust';\nimport Room from '@material-ui/icons/Room';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport TrackSelect from '../TrackSelect';\nimport { propTypeCurrentStops } from '../../store/prop-types';\nimport { to4326 } from '../../utils';\nimport { setIsFieldFocused } from '../../store/actions/Map';\n\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    width: '100%',\n    padding: '0px 0px 0px 20px',\n    boxSizing: 'unset',\n    [theme.breakpoints.down('xs')]: {\n      padding: '0px 0px 0px 5px',\n    },\n  },\n  button: {\n    color: 'black',\n    '& svg': {\n      height: '20px',\n      width: '20px',\n    },\n  },\n  fieldWrapper: {\n    maxWidth: '58%',\n    marginLeft: '5px',\n    [theme.breakpoints.down('sm')]: {\n      maxWidth: '50%',\n    },\n  },\n  buttonWrapper: {\n    maxWidth: '26px',\n  },\n}));\n\n/**\n * The component that displays the search field(s)\n * @category RoutingMenu\n */\nfunction SearchField(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    index,\n    addNewSearchFieldHandler,\n    currentStops,\n    removeSearchFieldHandler,\n    searchStopsHandler,\n    singleStop,\n    processHighlightedResultSelectHandler,\n    onFieldFocusHandler,\n    onPanViaClick,\n    inputReference,\n  } = props;\n  let fieldLeftIcon = null;\n  let searchFieldSize = 10;\n  let searchFieldLabel = '';\n  let fieldRightIcon = null;\n\n  const formatSingleStop = val => (Array.isArray(val) ? to4326(val) : val);\n  const isStationName = useMemo(\n    () => typeof singleStop === 'string' && singleStop !== '',\n    [singleStop],\n  );\n\n  const addNextHopDisabled =\n    currentStops[index] === '' ||\n    (currentStops.length > 2 && currentStops[index + 1] === '');\n  if (index === 0) {\n    // Start station field\n    fieldLeftIcon = (\n      <Tooltip title=\"Pan to the feature\">\n        <IconButton\n          onClick={() => onPanViaClick(singleStop, index)}\n          className={classes.button}\n          aria-label=\"Pan to the feature\"\n          size=\"small\"\n        >\n          <RadioButtonCheckedIcon fontSize=\"small\" color=\"primary\" />\n        </IconButton>\n      </Tooltip>\n    );\n    searchFieldLabel = 'Start';\n    fieldRightIcon = (\n      <Grid item xs={1} className={classes.buttonWrapper}>\n        <Tooltip title=\"Add Hop\">\n          <IconButton\n            onClick={() => addNewSearchFieldHandler(currentStops, index + 1)}\n            disabled={addNextHopDisabled}\n            className={classes.button}\n            aria-label=\"Add Hop\"\n            size=\"small\"\n          >\n            <AddCircleOutlineIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n    );\n  } else if (index === currentStops.length - 1) {\n    fieldLeftIcon = (\n      <Tooltip title=\"Pan to the feature\">\n        <IconButton\n          onClick={() => onPanViaClick(singleStop, index)}\n          className={classes.button}\n          aria-label=\"Pan to the feature\"\n          size=\"small\"\n        >\n          <Room color=\"primary\" />\n        </IconButton>\n      </Tooltip>\n    );\n    searchFieldLabel = 'End';\n  } else {\n    fieldLeftIcon = (\n      <Tooltip title=\"Pan to the feature\">\n        <IconButton\n          onClick={() => onPanViaClick(singleStop, index)}\n          className={classes.button}\n          aria-label=\"Pan to the feature\"\n          size=\"small\"\n        >\n          <Adjust fontSize=\"small\" color=\"primary\" />\n        </IconButton>\n      </Tooltip>\n    );\n    searchFieldSize = 9;\n    searchFieldLabel = 'Hop';\n    fieldRightIcon = (\n      <>\n        <Grid item xs={1} className={classes.buttonWrapper}>\n          <Tooltip title=\"Add Hop\">\n            <IconButton\n              disabled={addNextHopDisabled}\n              onClick={() => addNewSearchFieldHandler(currentStops, index + 1)}\n              className={classes.button}\n              aria-label=\"addHop\"\n              size=\"small\"\n            >\n              <AddCircleOutlineIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={1} className={classes.buttonWrapper}>\n          <Tooltip title=\"Remove Hop\">\n            <IconButton\n              onClick={() => removeSearchFieldHandler(index)}\n              className={classes.button}\n              aria-label=\"removeHop\"\n              size=\"small\"\n            >\n              <RemoveCircleOutlineIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </>\n    );\n  }\n  return (\n    <Grid\n      container\n      spacing={1}\n      className={classes.gridContainer}\n      alignItems=\"flex-end\"\n    >\n      <Grid item xs={1}>\n        {fieldLeftIcon}\n      </Grid>\n      <Grid item xs={searchFieldSize} className={classes.fieldWrapper}>\n        <TextField\n          style={{\n            width: '100%',\n          }}\n          inputRef={inputReference}\n          label={searchFieldLabel}\n          color=\"primary\"\n          onChange={e => searchStopsHandler(e, index)}\n          value={formatSingleStop(singleStop)}\n          onKeyDown={processHighlightedResultSelectHandler}\n          onFocus={() => {\n            dispatch(setIsFieldFocused(true));\n            onFieldFocusHandler(index);\n          }}\n          onBlur={() =>\n            setTimeout(() => {\n              dispatch(setIsFieldFocused(false));\n            }, 500)\n          }\n          onClick={event => {\n            if (event.target.select) {\n              event.target.select();\n            }\n          }}\n        />\n      </Grid>\n      <TrackSelect index={index} disabled={!isStationName} />\n      {fieldRightIcon}\n    </Grid>\n  );\n}\n\nSearchField.propTypes = {\n  index: PropTypes.number.isRequired,\n  addNewSearchFieldHandler: PropTypes.func.isRequired,\n  currentStops: propTypeCurrentStops,\n  removeSearchFieldHandler: PropTypes.func.isRequired,\n  searchStopsHandler: PropTypes.func.isRequired,\n  singleStop: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  processHighlightedResultSelectHandler: PropTypes.func.isRequired,\n  onFieldFocusHandler: PropTypes.func.isRequired,\n  onPanViaClick: PropTypes.func.isRequired,\n  inputReference: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n\nSearchField.defaultProps = {\n  currentStops: [],\n  singleStop: '',\n};\n\nexport default SearchField;\n","import SearchField from './SearchField';\n\nexport default SearchField;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Grid from '@material-ui/core/Grid';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport PropTypes from 'prop-types';\nimport nextId from 'react-id-generator';\nimport _ from 'lodash/core';\n\nimport {\n  setTracks,\n  setCurrentStops,\n  setCurrentStopsGeoJSON,\n  setCurrentMot,\n  showNotification,\n  setIsFieldFocused,\n  setShowLoadingBar,\n  setSelectedRoutes,\n  setIsRouteInfoOpen,\n} from '../../store/actions/Map';\nimport './RoutingMenu.scss';\nimport {\n  VALID_MOTS,\n  DEFAULT_MOTS,\n  OTHER_MOTS,\n  GRAPHHOPPER_MOTS,\n} from '../../constants';\nimport { to4326, to3857, findMotIcon } from '../../utils';\nimport SearchResults from '../SearchResults';\nimport SearchField from '../SearchField';\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={nextId()}\n      aria-labelledby={`simple-tab-${index}`}\n    >\n      {value === index && children}\n    </Typography>\n  );\n}\n\nconst swapFc = (input, indexA, indexB) => {\n  const temp = input[indexA];\n\n  // eslint-disable-next-line no-param-reassign\n  input[indexA] = input[indexB];\n  // eslint-disable-next-line no-param-reassign\n  input[indexB] = temp;\n};\n\n/**\n * The routing menu props\n * @typedef RoutingMenuProps\n * @type {props}\n * @property {string} stationSearchUrl The station search API used for searching.\n * @property {string} APIKey key obtained from geOps that enables you to used the previous API services.\n * @property {string[]} mots List of mots to be available (ex: ['bus', 'train'])\n * @property {LongLat} clickLocation The location clicked by the user in the form of [long,lat].\n * @category Props\n */\n\nconst useStyles = makeStyles(() => ({\n  tabs: {\n    width: '75%',\n  },\n  tab: {\n    minWidth: '33%',\n    width: '33%',\n  },\n  dropDown: {\n    width: '25%',\n    backgroundColor: 'white',\n  },\n  select: {\n    height: '100%',\n    textAlign: 'center',\n  },\n  selectInput: {\n    backgroundColor: 'white',\n    '&:focus': {\n      backgroundColor: 'white',\n    },\n  },\n  checkbox: {\n    margin: '0px 5px 0px 13px',\n  },\n}));\n\nlet abortController = new AbortController();\n\n/**\n * The routing menu that controls station search\n * @category RoutingMenu\n */\nfunction RoutingMenu({\n  mots,\n  stationSearchUrl,\n  APIKey,\n  isActiveRoute,\n  onZoomRouteClick,\n  onPanViaClick,\n  onDrawNewRoute,\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  /**\n   * Validate the mots provided from the props, then retrieve the icons for the valid ones.\n   * @param mots The provided mots\n   * @returns {Array} The valid mots with their icons\n   * @category RoutingMenu\n   */\n  const validateMots = (motsArray, validationMots) => {\n    const currentMotsArray = [];\n\n    motsArray\n      .filter(mot => {\n        return validationMots.includes(mot);\n      })\n      .forEach(providedMot => {\n        const requestedMot = validationMots.find(mot => mot === providedMot);\n        if (requestedMot) {\n          currentMotsArray.push({\n            name: requestedMot,\n            icon: findMotIcon(requestedMot),\n          });\n        }\n      });\n    if (currentMotsArray.length === 0) {\n      currentMotsArray.push({\n        name: VALID_MOTS[0],\n        icon: findMotIcon(VALID_MOTS[0]),\n      });\n    }\n    return currentMotsArray;\n  };\n\n  // Currently no 'coach' mot available for stop finder.\n  const handleStopFinderMot = mot => (mot === 'coach' ? 'bus' : mot);\n\n  const currentMotsVal = validateMots(mots, DEFAULT_MOTS);\n  const otherMotsVal = validateMots(mots, OTHER_MOTS);\n\n  const center = useSelector(state => state.MapReducer.center);\n  const tracks = useSelector(state => state.MapReducer.tracks);\n  const clickLocation = useSelector(state => state.MapReducer.clickLocation);\n  const currentStops = useSelector(state => state.MapReducer.currentStops);\n  const showLoadingBar = useSelector(state => state.MapReducer.showLoadingBar);\n  const isRouteInfoOpen = useSelector(\n    state => state.MapReducer.isRouteInfoOpen,\n  );\n  const currentStopsGeoJSON = useSelector(\n    state => state.MapReducer.currentStopsGeoJSON,\n  );\n  const currentMot = useSelector(state => state.MapReducer.currentMot);\n  const elRefs = React.useRef([]);\n  if (elRefs.current.length !== currentStops.length) {\n    elRefs.current = Array(currentStops.length)\n      .fill()\n      .map((el, i) => elRefs.current[i] || React.createRef());\n  }\n\n  const [currentMots] = useState(currentMotsVal);\n  const [otherMots] = useState(otherMotsVal);\n  const [lastChangedFieldIdx, setLastChangedFieldIdx] = useState(null);\n  const [currentSearchResults, setCurrentSearchResults] = useState([]);\n  const [searchMotOnly, setSearchMotOnly] = React.useState(true);\n  const [focusedFieldIndex, setFocusedFieldIndex] = useState(0);\n  const [currentOtherMot, setCurrentOtherMot] = useState(undefined);\n\n  useEffect(() => {\n    if (isRouteInfoOpen) {\n      dispatch(setSelectedRoutes([]));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentStops]);\n\n  /**\n   * Update the current stops array (string array) and the GeoJSON array in the local state.\n   * @param updatedCurrentStops The updated stops.\n   * @param updatedCurrentStopsGeoJSON The updated GeoJSON.\n   * @category RoutingMenu\n   */\n  const updateCurrentStops = (\n    updatedCurrentStops,\n    updatedCurrentStopsGeoJSON,\n    updatedFocusedFieldIndex,\n  ) => {\n    dispatch(setCurrentStops(updatedCurrentStops));\n    dispatch(setCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON));\n    setFocusedFieldIndex(updatedFocusedFieldIndex);\n  };\n\n  const updateFieldOnMapClick = (\n    updatedCurrentStops,\n    updatedFocusedFieldIndex,\n  ) => {\n    const updatedCurrentStopsGeoJSON = _.clone(currentStopsGeoJSON);\n    // Create GeoJSON\n    const tempGeoJSON = {\n      type: 'FeatureCollection',\n      features: [\n        {\n          type: 'Feature',\n          properties: {\n            id: clickLocation.slice().reverse(),\n            type: 'coordinates',\n          },\n          geometry: {\n            type: 'Point',\n            coordinates: clickLocation,\n          },\n        },\n      ],\n    };\n    const updatedTracks = [...tracks];\n    updatedTracks[updatedFocusedFieldIndex - 1] = '';\n    updatedCurrentStopsGeoJSON[focusedFieldIndex] = tempGeoJSON;\n    updateCurrentStops(\n      updatedCurrentStops,\n      updatedCurrentStopsGeoJSON,\n      updatedFocusedFieldIndex,\n    );\n    dispatch(setTracks(updatedTracks));\n    dispatch(setCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON));\n  };\n\n  /**\n   * If a location was received through the props (user click on map) act accordingly.\n   * @category RoutingMenu\n   */\n  useEffect(() => {\n    if (clickLocation) {\n      // A click occurred on the map\n      if (currentStops[focusedFieldIndex] === '') {\n        // Performs when there's an empty field.\n        const updatedCurrentStops = currentStops;\n        updatedCurrentStops[focusedFieldIndex] = clickLocation;\n        updateFieldOnMapClick(\n          currentStops,\n          focusedFieldIndex + 1 < currentStops.length\n            ? focusedFieldIndex + 1\n            : focusedFieldIndex,\n        );\n      } else {\n        const updatedCurrentStops = currentStops;\n        const updatedFocusedFieldIndex = focusedFieldIndex;\n        updatedCurrentStops[focusedFieldIndex] = clickLocation;\n        updateFieldOnMapClick(updatedCurrentStops, focusedFieldIndex);\n\n        const updatedCurrentStopsGeoJSON = _.clone(currentStopsGeoJSON);\n        // Create GeoJSON\n        const tempGeoJSON = {\n          type: 'FeatureCollection',\n          features: [\n            {\n              type: 'Feature',\n              properties: {\n                id: clickLocation.slice().reverse(),\n                type: 'coordinates',\n              },\n              geometry: {\n                type: 'Point',\n                coordinates: clickLocation,\n              },\n            },\n          ],\n        };\n        updatedCurrentStopsGeoJSON[focusedFieldIndex] = tempGeoJSON;\n        updateCurrentStops(\n          updatedCurrentStops,\n          updatedCurrentStopsGeoJSON,\n          updatedFocusedFieldIndex,\n        );\n        dispatch(setCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickLocation]);\n\n  /**\n   * Process changing the current selected mot, save in local state and dispatch store action.\n   * @param event The change event\n   * @param newMot The new selected mot\n   * @category RoutingMenu\n   */\n  const handleMotChange = (event, newMot, tracksVal) => {\n    const newTracks = [...tracksVal].map(() => '');\n    setCurrentOtherMot(null);\n    dispatch(setTracks(newTracks));\n    dispatch(setCurrentMot(newMot));\n  };\n\n  /**\n   * Gets callled when a search field is in focus. Keep track of the last focused/selected field.\n   * @param fieldIndex The search field index(order)\n   * @category RoutingMenu\n   */\n  const onFieldFocusHandler = fieldIndex => {\n    setFocusedFieldIndex(fieldIndex);\n    dispatch(setIsFieldFocused(true));\n  };\n\n  /**\n   * Create a new search field (hop) between already existing search fields\n   * @param indexToInsertAt The index to insert the new search field at.\n   * @category RoutingMenu\n   */\n  const addNewSearchFieldHandler = (currStops, indexToInsertAt) => {\n    const updatedCurrentStops = _.clone(currentStops);\n    const updatedCurrentStopsGeoJSON = _.clone(currentStopsGeoJSON);\n    updatedCurrentStops.splice(indexToInsertAt, 0, '');\n\n    if (updatedCurrentStopsGeoJSON[indexToInsertAt]) {\n      const keys = Object.keys(updatedCurrentStopsGeoJSON)\n        .filter(k => k >= indexToInsertAt)\n        .reverse();\n      keys.forEach(k => {\n        updatedCurrentStopsGeoJSON[`${parseInt(k, 10) + 1}`] =\n          updatedCurrentStopsGeoJSON[k];\n      });\n    }\n\n    const updatedTracks = [...tracks];\n    updatedTracks.splice(indexToInsertAt, 0, '');\n\n    dispatch(setTracks(updatedTracks));\n    dispatch(setCurrentStops(updatedCurrentStops));\n    dispatch(setCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON));\n  };\n\n  /**\n   * Remove a search field (hop) from a defined index. Then dispatch an update to the stops,\n   * so that the route can be updated if exists.\n   * @param indexToRemoveFrom The index to remove the search field from.\n   * @category RoutingMenu\n   */\n  const removeSearchFieldHandler = indexToRemoveFrom => {\n    const updatedCurrentStops = _.clone(currentStops);\n    const updatedCurrentStopsGeoJSON = _.clone(currentStopsGeoJSON);\n    updatedCurrentStops.splice(indexToRemoveFrom, 1);\n\n    if (updatedCurrentStopsGeoJSON[indexToRemoveFrom]) {\n      const keys = Object.keys(updatedCurrentStopsGeoJSON);\n      keys.forEach(key => {\n        const k = parseInt(key, 10);\n        if (k === indexToRemoveFrom) {\n          delete updatedCurrentStopsGeoJSON[indexToRemoveFrom];\n        } else if (k > indexToRemoveFrom) {\n          updatedCurrentStopsGeoJSON[k - 1] = updatedCurrentStopsGeoJSON[k];\n        }\n      });\n      delete updatedCurrentStopsGeoJSON[keys.length - 1];\n    }\n\n    const updatedTracks = [...tracks];\n    updatedTracks.splice(indexToRemoveFrom, 1);\n\n    dispatch(setTracks(updatedTracks));\n    dispatch(setCurrentStops(updatedCurrentStops));\n    dispatch(setCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON));\n  };\n\n  /**\n   * Perform searching for stations through the station API\n   * @param event\n   * @param fieldIndex The search field(hop) index(order)\n   * @category RoutingMenu\n   */\n  const searchStopsHandler = (event, fieldIndex) => {\n    setLastChangedFieldIdx(fieldIndex);\n    // only search if text is available\n    if (!event.target.value) {\n      const updatedCurrentStops = currentStops;\n      updatedCurrentStops[fieldIndex] = '';\n      setCurrentSearchResults([]);\n      dispatch(setCurrentStops(updatedCurrentStops));\n\n      // Reset the track value.\n      const updatedTracks = [...tracks];\n      updatedTracks[fieldIndex] = '';\n      dispatch(setTracks(updatedTracks));\n\n      dispatch(setShowLoadingBar(false));\n      return;\n    }\n    const updatedCurrentStops = _.clone(currentStops);\n    updatedCurrentStops[fieldIndex] = event.target.value;\n    dispatch(setCurrentStops(updatedCurrentStops));\n    dispatch(setShowLoadingBar(true));\n\n    abortController.abort();\n    abortController = new AbortController();\n    const { signal } = abortController;\n\n    const reqUrl = `${stationSearchUrl}?q=${event.target.value}&key=${APIKey}${\n      !GRAPHHOPPER_MOTS.includes(currentMot)\n        ? `&mots=${searchMotOnly ? handleStopFinderMot(currentMot) : ''}`\n        : ''\n    }&ref_location=${to4326(center)\n      .reverse()\n      .join(',')}&limit=10`;\n\n    fetch(reqUrl, { signal })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          dispatch(showNotification(\"Couldn't find stations\", 'warning'));\n          return;\n        }\n        if (response.features.length === 0) {\n          dispatch(showNotification(\"Couldn't find stations\", 'warning'));\n        }\n        setCurrentSearchResults(response.features);\n        dispatch(setShowLoadingBar(false));\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          // eslint-disable-next-line no-console\n          console.warn(`Abort ${reqUrl}`);\n          return;\n        }\n        // It's important to rethrow all other errors so you don't silence them!\n        // For example, any error thrown by setState(), will pass through here.\n        throw err;\n      });\n  };\n\n  const retriggerSearch = () => {\n    if (lastChangedFieldIdx === null) {\n      return;\n    }\n    searchStopsHandler(\n      {\n        target: {\n          value: elRefs.current[lastChangedFieldIdx].current.value,\n        },\n      },\n      lastChangedFieldIdx,\n    );\n  };\n\n  /**\n   * The user makes changes to the current search. Either select the first result,\n   * or delete the text to make a new search.\n   * @param event\n   * @category RoutingMenu\n   */\n  const processHighlightedResultSelectHandler = event => {\n    const [firstSearchResult] = currentSearchResults;\n    if (event.key === 'Enter' && firstSearchResult) {\n      // The user has chosen the first result by pressing 'Enter' key on keyboard\n      const updatedCurrentStops = currentStops;\n      updateCurrentStops[focusedFieldIndex] = firstSearchResult.properties.name;\n      const updatedCurrentStopsGeoJSON = _.clone(currentStopsGeoJSON);\n      updatedCurrentStopsGeoJSON[focusedFieldIndex] = firstSearchResult;\n      dispatch(setCurrentStops(updatedCurrentStops));\n      setCurrentSearchResults([]);\n      dispatch(setCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON));\n    }\n    if (event.key === 'Backspace') {\n      // The user has erased some of the search query. Reset everything and start all over.\n      let updateCurrentSearchResults = [];\n      if (event.target.value) updateCurrentSearchResults = currentSearchResults;\n      const updatedCurrentStopsGeoJSON = {};\n      Object.keys(currentStopsGeoJSON).forEach(key => {\n        if (key !== focusedFieldIndex.toString()) {\n          updatedCurrentStopsGeoJSON[key] = currentStopsGeoJSON[key];\n        }\n      });\n      setCurrentSearchResults(updateCurrentSearchResults);\n      dispatch(setCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON));\n    }\n  };\n\n  /**\n   * The user uses the mouse/touch to select one of the search results.\n   * @param searchResult The clicked search result.\n   * @category RoutingMenu\n   */\n  const processClickedResultHandler = searchResult => {\n    const updatedCurrentStops = currentStops;\n    updatedCurrentStops[focusedFieldIndex] = searchResult.properties.name;\n    const updatedCurrentStopsGeoJSON = _.clone(currentStopsGeoJSON);\n    updatedCurrentStopsGeoJSON[focusedFieldIndex] = searchResult;\n    dispatch(setCurrentStops(updatedCurrentStops));\n\n    const updatedTracks = [...tracks];\n    updatedTracks[focusedFieldIndex] = '';\n    dispatch(setTracks(updatedTracks));\n    setCurrentSearchResults([]);\n\n    Object.keys(updatedCurrentStopsGeoJSON).forEach(key => {\n      if (key === focusedFieldIndex.toString()) {\n        updatedCurrentStopsGeoJSON[key].geometry.coordinates = to3857(\n          updatedCurrentStopsGeoJSON[key].geometry.coordinates,\n        );\n      }\n    });\n    dispatch(setCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON));\n  };\n\n  const changeCurrentOtherMot = evt => {\n    if (!evt) {\n      setCurrentOtherMot(null);\n    } else {\n      const { value } = evt.target;\n      handleMotChange({}, value, tracks);\n      setCurrentOtherMot(value);\n    }\n  };\n\n  const getItemStyle = (isDragging, draggableStyle) => ({\n    userSelect: 'none',\n    background: isDragging ? '#ededed' : 'white',\n    ...draggableStyle,\n  });\n\n  const onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const updatedCurrentStops = _.clone(currentStops);\n    const [removed] = updatedCurrentStops.splice(result.source.index, 1);\n    updatedCurrentStops.splice(result.destination.index, 0, removed);\n\n    const updatedCurrentStopsGeoJSON = _.clone(currentStopsGeoJSON);\n\n    const newSource = { ...updatedCurrentStopsGeoJSON[result.source.index] };\n    if (result.destination.index < result.source.index) {\n      const keys = Object.keys(updatedCurrentStopsGeoJSON)\n        .filter(k => {\n          return (\n            parseInt(k, 10) >= result.destination.index &&\n            parseInt(k, 10) < result.source.index\n          );\n        })\n        .reverse();\n      keys.forEach(k => {\n        updatedCurrentStopsGeoJSON[`${parseInt(k, 10) + 1}`] =\n          updatedCurrentStopsGeoJSON[k];\n      });\n      updatedCurrentStopsGeoJSON[result.destination.index] = newSource;\n    } else if (result.destination.index > result.source.index) {\n      const keys = Object.keys(updatedCurrentStopsGeoJSON).filter(\n        k =>\n          parseInt(k, 10) >= result.source.index &&\n          parseInt(k, 10) <= result.destination.index,\n      );\n      keys.forEach(k => {\n        if (parseInt(k, 10) === result.destination.index) {\n          updatedCurrentStopsGeoJSON[result.destination.index] = newSource;\n        } else {\n          updatedCurrentStopsGeoJSON[k] =\n            updatedCurrentStopsGeoJSON[`${parseInt(k, 10) + 1}`];\n        }\n      });\n    }\n\n    const updatedTracks = [...tracks];\n    swapFc(updatedTracks, result.source.index, result.destination.index);\n\n    dispatch(setTracks(updatedTracks));\n    dispatch(setCurrentStops(updatedCurrentStops));\n    dispatch(setCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON));\n  };\n\n  /**\n   * Render the component to the dom.\n   * @category RoutingMenu\n   */\n\n  if (!onZoomRouteClick || !onPanViaClick) {\n    return null;\n  }\n\n  return (\n    <div className=\"rd-routing-menu\">\n      <Paper square elevation={3}>\n        <div className=\"rd-routing-menu-header\">\n          <Tabs\n            value={DEFAULT_MOTS.includes(currentMot) ? currentMot : false}\n            className={classes.tabs}\n            onChange={(e, mot) => {\n              handleMotChange(e, mot, tracks);\n            }}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            aria-label=\"mots icons\"\n          >\n            {currentMots.map(singleMot => {\n              return (\n                <Tab\n                  className={classes.tab}\n                  key={`mot-${singleMot.name}`}\n                  value={singleMot.name}\n                  icon={singleMot.icon}\n                  aria-label={singleMot.name}\n                />\n              );\n            })}\n          </Tabs>\n          <FormControl className={classes.dropDown}>\n            <Select\n              renderValue={val => (val !== '' ? val : 'Other MOTs')}\n              className={classes.select}\n              classes={{ root: classes.selectInput }}\n              labelId=\"rd-other-mot-label\"\n              value={currentOtherMot || ''}\n              disableUnderline={!currentOtherMot}\n              displayEmpty\n              onChange={changeCurrentOtherMot}\n            >\n              {otherMots.map(mot => {\n                return (\n                  <MenuItem value={mot.name} key={`other-mot-${mot.name}`}>\n                    {mot.name}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <TabPanel>\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n              {provided => (\n                <div\n                  className=\"stopsContainer\"\n                  // eslint-disable-next-line react/jsx-props-no-spreading\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  style={{\n                    background: 'white',\n                  }}\n                >\n                  {currentStops.map((item, index) => (\n                    <Draggable\n                      // eslint-disable-next-line react/no-array-index-key\n                      key={`searchField-${index}`}\n                      draggableId={`searchField-${index}`}\n                      index={index}\n                    >\n                      {(prov, snpsht) => (\n                        <div\n                          ref={prov.innerRef}\n                          // eslint-disable-next-line react/jsx-props-no-spreading\n                          {...prov.draggableProps}\n                          // eslint-disable-next-line react/jsx-props-no-spreading\n                          {...prov.dragHandleProps}\n                          style={getItemStyle(\n                            snpsht.isDragging,\n                            prov.draggableProps.style,\n                          )}\n                        >\n                          <SearchField\n                            // eslint-disable-next-line react/no-array-index-key\n                            key={`searchField-${index}`}\n                            index={index}\n                            inputReference={elRefs.current[index]}\n                            addNewSearchFieldHandler={addNewSearchFieldHandler}\n                            currentStops={currentStops}\n                            removeSearchFieldHandler={removeSearchFieldHandler}\n                            searchStopsHandler={searchStopsHandler}\n                            singleStop={item}\n                            processHighlightedResultSelectHandler={\n                              processHighlightedResultSelectHandler\n                            }\n                            onFieldFocusHandler={onFieldFocusHandler}\n                            onPanViaClick={onPanViaClick}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          <div className=\"rd-mot-checkbox\">\n            <Checkbox\n              className={classes.checkbox}\n              checked={searchMotOnly}\n              onChange={() => {\n                setSearchMotOnly(!searchMotOnly);\n                retriggerSearch(lastChangedFieldIdx);\n              }}\n              color=\"primary\"\n              inputProps={{ 'aria-label': 'use only mot' }}\n            />\n            <span>Search only selected mode of transport</span>\n          </div>\n          <div className=\"rd-route-buttons\">\n            <Grid item xs={6}>\n              <Tooltip title=\"Zoom to the route\">\n                <Button\n                  onClick={() => onZoomRouteClick()}\n                  aria-label=\"Zoom to the route\"\n                  disabled={!isActiveRoute}\n                  component={isActiveRoute ? undefined : 'span'}\n                  variant=\"contained\"\n                  color=\"default\"\n                  classes={{\n                    root: 'rd-button-root',\n                    disabled: 'rd-button-disabled',\n                  }}\n                  startIcon={<ZoomInIcon fontSize=\"small\" />}\n                >\n                  <Typography>Zoom to the route</Typography>\n                </Button>\n              </Tooltip>\n            </Grid>\n            <Grid item xs={6}>\n              <Tooltip title=\"Route information\">\n                <Button\n                  onClick={() => {\n                    onDrawNewRoute(true).then(() => {\n                      dispatch(setIsRouteInfoOpen(!isRouteInfoOpen));\n                    });\n                  }}\n                  aria-label=\"Route information\"\n                  disabled={!isActiveRoute}\n                  component={isActiveRoute ? undefined : 'span'}\n                  variant=\"contained\"\n                  color=\"default\"\n                  className={isRouteInfoOpen ? 'rd-button-active' : ''}\n                  classes={{\n                    root: 'rd-button-root',\n                    disabled: 'rd-button-disabled',\n                  }}\n                  startIcon={<InfoIcon fontSize=\"small\" />}\n                >\n                  <Typography>Route information</Typography>\n                </Button>\n              </Tooltip>\n            </Grid>\n          </div>\n        </TabPanel>\n        {showLoadingBar ? <LinearProgress /> : null}\n      </Paper>\n      <SearchResults\n        currentSearchResults={currentSearchResults}\n        processClickedResultHandler={processClickedResultHandler}\n      />\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n  value: PropTypes.string,\n  index: PropTypes.number,\n};\n\nTabPanel.defaultProps = {\n  value: null,\n  index: null,\n};\n\nRoutingMenu.propTypes = {\n  mots: PropTypes.arrayOf(PropTypes.string).isRequired,\n  APIKey: PropTypes.string.isRequired,\n  stationSearchUrl: PropTypes.string.isRequired,\n  isActiveRoute: PropTypes.bool.isRequired,\n  onZoomRouteClick: PropTypes.func,\n  onPanViaClick: PropTypes.func,\n  onDrawNewRoute: PropTypes.func.isRequired,\n};\n\nRoutingMenu.defaultProps = {\n  onZoomRouteClick: undefined,\n  onPanViaClick: undefined,\n};\n\nexport default RoutingMenu;\n","import RoutingMenu from './RoutingMenu';\n\nexport default RoutingMenu;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  strokeWidth: 4,\n  fill: \"none\",\n  stroke: \"#ff7f50\",\n  d: \"M0,16h10.666666666666666             A5.333333333333333,5.333333333333333,0,1,1,21.333333333333332,16             H32M21.333333333333332,16             A5.333333333333333,5.333333333333333,0,1,1,10.666666666666666,16\",\n  className: \"recharts-legend-icon\"\n});\n\nvar SvgInterpolatedSurface = function SvgInterpolatedSurface(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"recharts-surface\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgInterpolatedSurface, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/interpolated_surface.1ca8d48c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  strokeWidth: 4,\n  fill: \"none\",\n  stroke: \"#3f51b5\",\n  d: \"M0,16h10.666666666666666             A5.333333333333333,5.333333333333333,0,1,1,21.333333333333332,16             H32M21.333333333333332,16             A5.333333333333333,5.333333333333333,0,1,1,10.666666666666666,16\",\n  className: \"recharts-legend-icon\"\n});\n\nvar SvgSurfaceElevation = function SvgSurfaceElevation(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"recharts-surface\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSurfaceElevation, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/surface_elevation.eab6ed4c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Feature } from 'ol';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport nearestPointOnLine from '@turf/nearest-point-on-line';\nimport combine from '@turf/combine';\nimport { Point } from 'ol/geom';\nimport Dialog from '@geops/react-ui/components/Dialog';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Label,\n  Tooltip,\n  ReferenceDot,\n  ReferenceLine,\n  ResponsiveContainer,\n} from 'recharts';\nimport { ReactComponent as InterpolatedSvg } from './interpolated_surface.svg';\nimport { ReactComponent as SurfaceSvg } from './surface_elevation.svg';\nimport { setIsRouteInfoOpen, setDialogPosition } from '../../store/actions/Map';\nimport './RouteInfosDialog.scss';\n\nconst propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.instanceOf(Feature)).isRequired,\n  hoveredCoords: PropTypes.arrayOf(PropTypes.number),\n  onHighlightPoint: PropTypes.func.isRequired,\n  clearHighlightPoint: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  hoveredCoords: null,\n};\n\nconst tickFormatter = (length, isMeter) => {\n  let output;\n  if (!isMeter) {\n    output = `${Math.round((length / 1000) * 100) / 100}`;\n  } else {\n    output = `${Math.round(length * 100) / 100}`;\n  }\n  return output;\n};\n\nconst everyNth = (arr, interval, start) => {\n  const result = [];\n  for (let i = start || 0; i < arr.length; i += interval || 1) {\n    result.push(arr[i]);\n  }\n  return result;\n};\n\nconst getTooltipX = (dist, length) => {\n  const xPosition = (dist / length) * 300;\n  return xPosition >= 80 ? xPosition : 80;\n};\n\nconst getTooltipY = (alt, maxAlt) => {\n  return alt / maxAlt > 0.5 ? 110 : 20;\n};\n\nfunction RouteInfosDialog({\n  routes,\n  hoveredCoords,\n  onHighlightPoint,\n  clearHighlightPoint,\n}) {\n  const dispatch = useDispatch();\n  const [hoveredPoint, setHoveredPoint] = useState(null);\n  const [length, setLength] = useState(null);\n  const [minAltitude, setMinAltitude] = useState(0);\n  const [maxAltitude, setMaxAltitude] = useState(null);\n  const [routePoints, setRoutePoints] = useState([]);\n  const [distanceUnit, setDistanceUnit] = useState(null);\n  const [isMeter, setIsMeter] = useState(null);\n\n  const dialogPosition = useSelector(state => state.MapReducer.dialogPosition);\n\n  const onDragStop = (evt, position) => {\n    dispatch(\n      setDialogPosition({\n        x: position.lastX,\n        y: position.lastY,\n      }),\n    );\n  };\n\n  const renderPrograTooltip = (hovCoords, linePoints, routeLine) => {\n    const format = new GeoJSON();\n\n    const line = combine(\n      format.writeFeaturesObject(routeLine, {\n        dataProjection: 'EPSG:4326',\n        featureProjection: 'EPSG:3857',\n      }),\n    ).features[0];\n\n    const hoveredFeat = new Feature({\n      geometry: new Point(hovCoords),\n    });\n    const pt = format.writeFeatureObject(hoveredFeat, {\n      dataProjection: 'EPSG:4326',\n      featureProjection: 'EPSG:3857',\n    });\n\n    const turfClosestPt = nearestPointOnLine(line, pt);\n    const lineCoordinates = line.geometry.coordinates;\n    const nearestPts = lineCoordinates.map(coords => {\n      return coords[turfClosestPt.properties.index];\n    });\n    const nearestPt = nearestPts.reduce((prev, curr) => {\n      const goal = turfClosestPt.geometry.coordinates[0];\n      if (!prev) {\n        return curr;\n      }\n      return curr && prev && Math.abs(curr[0] - goal) < Math.abs(prev[0] - goal)\n        ? curr\n        : prev;\n    });\n\n    const hoveredLineIdx = nearestPts.indexOf(nearestPt);\n    // Turf only return the index within the closest feature.\n    // We need to add the length of each preceding feature to have the correct index.\n    let nearestPtIndex = turfClosestPt.properties.index;\n    for (let i = 0; i < hoveredLineIdx; i += 1) {\n      nearestPtIndex += lineCoordinates[i].length;\n    }\n\n    const point = linePoints[nearestPtIndex];\n    setHoveredPoint(point);\n\n    if (!point) {\n      return null;\n    }\n    return (\n      <div className=\"rd-tootip-wrapper\">\n        <div>surface elevation: {point.surfaceElevation} m</div>\n        <div>interpolated altitude: {point.alt} m</div>\n        <div>\n          distance: {tickFormatter(point.distance, isMeter)}\n          {isMeter ? ' m' : ' km'}\n        </div>\n      </div>\n    );\n  };\n\n  const renderTooltip = tooltipProps => {\n    if (hoveredPoint) {\n      setHoveredPoint(null);\n    }\n    if (!tooltipProps.payload.length) {\n      return;\n    }\n    const {\n      xVal,\n      yVal,\n      alt,\n      surfaceElevation,\n      distance,\n    } = tooltipProps.payload[0].payload;\n\n    onHighlightPoint([xVal, yVal]);\n    // eslint-disable-next-line consistent-return\n    return (\n      <div className=\"rd-tootip-wrapper\">\n        <div>surface elevation: {surfaceElevation} m</div>\n        <div>interpolated altitude: {alt} m</div>\n        <div>\n          distance: {tickFormatter(distance, isMeter)}\n          {isMeter ? ' m' : ' km'}\n        </div>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    const pointArray = [];\n    const coords = [].concat(\n      ...routes.map(r => r.getGeometry().getFlatCoordinates()),\n    );\n    const distances = [].concat(...routes.map(r => r.get('vertex_distances')));\n    const lgth = routes\n      .map(r => r.get('line_length'))\n      .reduce((a, b) => a + b, 0);\n    setLength(lgth);\n    setDistanceUnit(lgth > 1000 ? 'km' : 'm');\n    setIsMeter(distanceUnit === 'm');\n\n    const xArray = everyNth(coords, 3, 0);\n    const yArray = everyNth(coords, 3, 1);\n    const altitudesArray = everyNth(coords, 3, 2).map(el => Math.round(el));\n    const surfaceElevation = [].concat(\n      ...routes.map(r => r.get('surface_elevations').map(el => Math.round(el))),\n    );\n    setMinAltitude(Math.min(...surfaceElevation.concat(altitudesArray)));\n    setMaxAltitude(Math.max(...surfaceElevation.concat(altitudesArray)));\n\n    altitudesArray.forEach((alt, idx) => {\n      pointArray.push({\n        alt,\n        surfaceElevation: surfaceElevation.length\n          ? surfaceElevation[idx]\n          : null,\n        xVal: xArray[idx],\n        yVal: yArray[idx],\n        distance: distances[idx],\n      });\n    });\n\n    setRoutePoints(pointArray);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [routes]);\n\n  return (\n    <Dialog\n      isOpen\n      title={<span>Route information</span>}\n      isDraggable\n      onDragStop={onDragStop}\n      className=\"rd-dialog-container\"\n      classNameHeader=\"rd-dialog-header\"\n      classNameCloseBt=\"rd-dialog-close-bt\"\n      cancelDraggable=\".tm-dialog-body\"\n      position={dialogPosition}\n      onClose={() => dispatch(setIsRouteInfoOpen(false))}\n    >\n      <div className=\"rd-dialog-legend\">\n        <span>\n          <SurfaceSvg /> surface elevation\n        </span>\n        <span>\n          <InterpolatedSvg /> interpolated altitude\n        </span>\n      </div>\n      <ResponsiveContainer width=\"90%\" height=\"80%\">\n        <LineChart data={routePoints} onMouseLeave={clearHighlightPoint}>\n          <YAxis\n            type=\"number\"\n            axisLine={false}\n            tickLine={false}\n            domain={[minAltitude - 10, 'dataMax']}\n          >\n            <Label value=\"m\" offset={10} position=\"top\" />\n          </YAxis>\n          <XAxis\n            type=\"number\"\n            dataKey=\"distance\"\n            tickFormatter={dist => tickFormatter(dist, isMeter)}\n          >\n            <Label value={distanceUnit} offset={10} position=\"right\" />\n          </XAxis>\n          <CartesianGrid vertical={false} />\n          <Line\n            type=\"monotone\"\n            dataKey=\"alt\"\n            name=\"interpolated altitude\"\n            dot={false}\n            stroke=\"#ff7f50\"\n            strokeWidth={2}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"surfaceElevation\"\n            name=\"surface elevation\"\n            dot={false}\n            stroke=\"#3f51b5\"\n            strokeWidth={2}\n          />\n          {hoveredCoords && hoveredPoint && (\n            <ReferenceLine x={hoveredPoint.distance} stroke=\"lightgrey\" />\n          )}\n          {hoveredCoords && hoveredPoint && (\n            <ReferenceDot\n              r={4}\n              x={hoveredPoint.distance}\n              y={hoveredPoint.alt}\n              fill=\"#3f51b5\"\n              stroke=\"white\"\n            />\n          )}\n          <Tooltip\n            cursor={hoveredPoint ? true : 'auto'}\n            position={\n              hoveredPoint\n                ? {\n                    x: getTooltipX(hoveredPoint.distance, length),\n                    y: getTooltipY(hoveredPoint.alt, maxAltitude),\n                  }\n                : 'auto'\n            }\n            content={content =>\n              hoveredCoords\n                ? renderPrograTooltip(hoveredCoords, routePoints, routes)\n                : renderTooltip(content)\n            }\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </Dialog>\n  );\n}\n\nRouteInfosDialog.propTypes = propTypes;\nRouteInfosDialog.defaultProps = defaultProps;\n\nexport default React.memo(RouteInfosDialog);\n","import RouteInfosDialog from './RouteInfosDialog';\n\nexport default RouteInfosDialog;\n","import { Style, Circle, Stroke, Fill } from 'ol/style';\n\nconst lineStyler = lineStyle => {\n  return lineStyle.map(\n    style =>\n      new Style({\n        stroke: new Stroke({\n          color: style[0],\n          width: style[1],\n          lineDash: style[2],\n        }),\n      }),\n  );\n};\n\nconst railLineStyle = lineStyler([\n  ['darkred', 6],\n  ['red', 3],\n]);\n\nconst railLineHoveredStyle = lineStyler([\n  ['darkred', 7],\n  ['red', 4],\n]);\n\nconst busLineStyle = lineStyler([\n  ['rgb(153,153,0)', 6],\n  ['yellow', 3],\n]);\n\nconst busLineHoveredStyle = lineStyler([\n  ['rgb(153,153,0)', 7],\n  ['yellow', 4],\n]);\n\nconst pedestrianLineStyle = lineStyler([\n  ['rgb(96, 186, 219)', 6],\n  ['rgb(173, 216, 230)', 3],\n]);\n\nconst pedestrianLineHoveredStyle = lineStyler([\n  ['rgb(96, 186, 219)', 7],\n  ['rgb(173, 216, 230)', 4],\n]);\n\nconst carLineStyle = lineStyler([\n  ['grey', 6],\n  ['darkgrey', 3],\n]);\n\nconst carLineHoveredStyle = lineStyler([\n  ['grey', 7],\n  ['darkgrey', 4],\n]);\n\nconst othersLineStyle = lineStyler([\n  ['darkblue', 6],\n  ['blue', 3],\n]);\n\nconst othersLineHoveredStyle = lineStyler([\n  ['darkblue', 7],\n  ['blue', 4],\n]);\n\nconst railPointStyle = new Style({\n  image: new Circle({\n    radius: 7,\n    fill: new Fill({ color: 'red' }),\n    stroke: new Stroke({ color: 'darkred', width: 2 }),\n  }),\n});\n\nconst pedestrianPointStyle = new Style({\n  image: new Circle({\n    radius: 3,\n    fill: new Fill({ color: 'rgb(173, 216, 230)' }),\n    stroke: new Stroke({ color: 'rgb(96, 186, 219)', width: 2 }),\n  }),\n});\n\nconst carPointStyle = new Style({\n  image: new Circle({\n    radius: 3,\n    fill: new Fill({ color: 'darkgrey' }),\n    stroke: new Stroke({ color: 'grey', width: 2 }),\n  }),\n});\n\nconst busPointStyle = new Style({\n  image: new Circle({\n    radius: 7,\n    fill: new Fill({ color: 'yellow' }),\n    stroke: new Stroke({ color: 'rgb(153,153,0)', width: 2 }),\n  }),\n});\n\nconst othersPointStyle = new Style({\n  image: new Circle({\n    radius: 7,\n    fill: new Fill({ color: 'blue' }),\n    stroke: new Stroke({ color: 'darkblue', width: 2 }),\n  }),\n});\n\nconst pointStyleFunction = mot => {\n  if (mot === 'rail') {\n    return railPointStyle;\n  }\n  if (mot === 'bus') {\n    return busPointStyle;\n  }\n  if (mot === 'foot') {\n    return pedestrianPointStyle;\n  }\n  if (mot === 'car') {\n    return carPointStyle;\n  }\n  return othersPointStyle;\n};\n\nconst lineStyleFunction = (mot, isHovered) => {\n  if (mot === 'rail') {\n    return isHovered ? railLineHoveredStyle : railLineStyle;\n  }\n  if (mot === 'bus') {\n    return isHovered ? busLineHoveredStyle : busLineStyle;\n  }\n  if (mot === 'foot') {\n    return isHovered ? pedestrianLineHoveredStyle : pedestrianLineStyle;\n  }\n  if (mot === 'car') {\n    return isHovered ? carLineHoveredStyle : carLineStyle;\n  }\n  return isHovered ? othersLineHoveredStyle : othersLineStyle;\n};\n\nexport { lineStyleFunction, pointStyleFunction };\n","import React, { Component, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport ConfigReader from 'react-spatial/ConfigReader';\nimport LayerService from 'react-spatial/LayerService';\nimport Layer from 'react-spatial/layers/Layer';\nimport BasicMap from 'react-spatial/components/BasicMap';\nimport { Map, Feature } from 'ol';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport _ from 'lodash/core';\nimport { Point } from 'ol/geom';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport { Vector as VectorSource } from 'ol/source';\nimport {\n  defaults as defaultInteractions,\n  Translate,\n  Modify,\n} from 'ol/interaction';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport RoutingMenu from '../RoutingMenu';\nimport RouteInfosDialog from '../RouteInfosDialog';\nimport {\n  lineStyleFunction,\n  pointStyleFunction,\n} from '../../config/styleConfig';\nimport {\n  propTypeCoordinates,\n  propTypeCurrentStops,\n  propTypeCurrentStopsGeoJSON,\n} from '../../store/prop-types';\nimport { GRAPHHOPPER_MOTS } from '../../constants';\nimport { to4326 } from '../../utils';\nimport './MapComponent.scss';\nimport * as actions from '../../store/actions';\n\n/**\n * The map props\n * @typedef MapComponentProps\n * @type {props}\n * @property {string} APIKey key obtained from geOps that enables you to used the previous API services.\n * @property {string} routingUrl The API routing url to be used for navigation.\n * @property {string} currentMot The current selected mot by user, example 'bus'.\n * @property {Object} currentStopsGeoJSON The current stops defined by user in geojson format inside a dictionary, key is the stop index(order) and the value is the geoJSON itself.\n * @property {function} onShowNotification A store action that can be dispatched, takes the notification message and type as arguments.\n * @property {function} onSetClickLocation A store action that can be dispatched, takes the clicked location on map array of [long,lat] and stores it in the store.\n * @category Props\n */\n\nlet abortController = new AbortController();\nconst zoom = 6;\n\n/**\n * The only true map that shows inside the application.\n * @category Map\n */\nclass MapComponent extends Component {\n  static getExtentCenter = extent => {\n    const X = extent[0] + (extent[2] - extent[0]) / 2;\n    const Y = extent[1] + (extent[3] - extent[1]) / 2;\n    return [X, Y];\n  };\n\n  static indexInGeom = (lineGeom, point) => {\n    const firstBreakIdx = lineGeom.indexOf(point[0]);\n    const secondBreakIdx = lineGeom.indexOf(point[1]);\n\n    return firstBreakIdx === secondBreakIdx - 1;\n  };\n\n  /**\n   * Default constructor, gets called automatically upon initialization.\n   * @param {...MapComponentProps} props Props received so that the component can function properly.\n   * @category Map\n   */\n  constructor(props) {\n    super(props);\n    const { APIKey, onSetClickLocation, olMap } = this.props;\n    this.map = olMap;\n    this.mapRef = createRef();\n    this.hoveredFeature = null;\n    this.hoveredRoute = null;\n    this.initialRouteDrag = null;\n    this.state = {\n      hoveredStationOpen: false,\n      hoveredStationName: '',\n      isActiveRoute: false,\n      hoveredPoint: null,\n    };\n\n    this.onHighlightPoint = this.onHighlightPoint.bind(this);\n\n    this.projection = 'EPSG:3857';\n\n    const layerService = new LayerService(\n      ConfigReader.readConfig([\n        {\n          name: 'Basemap',\n          visible: true,\n          isBaseLayer: true,\n          data: {\n            type: 'mapbox',\n            url: `https://maps.geops.io/styles/travic_v2/style.json?key=${APIKey}`,\n          },\n        },\n      ]),\n    );\n\n    // Define route vectorLayer.\n    this.routeVectorSource = new VectorSource({\n      features: [],\n    });\n    layerService.addLayer(\n      new Layer({\n        key: 'routeLayer',\n        name: 'routeLayer',\n        olLayer: new VectorLayer({\n          zIndex: 1,\n          source: this.routeVectorSource,\n        }),\n      }),\n    );\n\n    // Define highlight vectorLayer.\n    this.highlightVectorSource = new VectorSource({});\n    layerService.addLayer(\n      new Layer({\n        key: 'highlightLayer',\n        name: 'highlightLayer',\n        olLayer: new VectorLayer({\n          zIndex: 1,\n          source: this.highlightVectorSource,\n        }),\n      }),\n    );\n\n    // Define stop vectorLayer.\n    this.markerVectorSource = new VectorSource({});\n    layerService.addLayer(\n      new Layer({\n        key: 'markerLayer',\n        name: 'markerLayer',\n        olLayer: new VectorLayer({\n          zIndex: 1,\n          source: this.markerVectorSource,\n        }),\n      }),\n    );\n\n    this.markerVectorLayer = layerService.getLayer('markerLayer');\n    this.routeVectorLayer = layerService.getLayer('routeLayer');\n    this.layers = [...layerService.getLayers()];\n\n    const translate = new Translate({\n      layers: [this.markerVectorLayer.olLayer],\n      hitTolerance: 3,\n    });\n\n    translate.on('translateend', evt => {\n      const {\n        tracks,\n        onSetTracks,\n        currentStops,\n        currentStopsGeoJSON,\n        onSetCurrentStops,\n        onSetCurrentStopsGeoJSON,\n      } = this.props;\n      const newTracks = _.clone(tracks);\n      const newCurrentStops = _.clone(currentStops);\n      const newCurentStopsGeoJSON = _.clone(currentStopsGeoJSON);\n\n      const { name, id } = evt.features.getArray()[0].getProperties();\n      let featureIndex;\n      if (name) {\n        featureIndex = currentStops.indexOf(name);\n      } else {\n        const isCoordPresent = el => {\n          if (!Array.isArray(el)) {\n            return false;\n          }\n          const coords = id.slice().reverse();\n          return el[0] === coords[0] && el[1] === coords[1];\n        };\n        featureIndex = currentStops.findIndex(isCoordPresent);\n      }\n      if (featureIndex === -1) {\n        return;\n      }\n      newTracks[featureIndex] = '';\n      newCurrentStops[featureIndex] = evt.coordinate;\n      newCurentStopsGeoJSON[featureIndex] = {\n        type: 'FeatureCollection',\n        features: [\n          {\n            type: 'Feature',\n            properties: {\n              id: evt.coordinate.slice().reverse(),\n              type: 'coordinates',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: evt.coordinate,\n            },\n          },\n        ],\n      };\n      onSetTracks(newTracks);\n      onSetCurrentStops(newCurrentStops);\n      onSetCurrentStopsGeoJSON(newCurentStopsGeoJSON);\n    });\n\n    const modify = new Modify({\n      source: this.routeVectorSource,\n      pixelTolerance: 4,\n      condition: () => {\n        const { currentMot } = this.props;\n        return !GRAPHHOPPER_MOTS.includes(currentMot);\n      },\n      style: () => {\n        const { currentMot } = this.props;\n        return pointStyleFunction(currentMot);\n      },\n    });\n\n    modify.on('modifystart', evt => {\n      // save start point to find where to add the new HOP!\n      this.initialRouteDrag = {\n        features: evt.features.getArray(),\n        coordinate: evt.mapBrowserEvent.coordinate,\n      };\n    });\n\n    modify.on('modifyend', evt => {\n      const { features } = this.initialRouteDrag;\n      const {\n        tracks,\n        currentMot,\n        currentStops,\n        currentStopsGeoJSON,\n        onSetTracks,\n        onSetCurrentStops,\n        onSetCurrentStopsGeoJSON,\n      } = this.props;\n      const newTracks = [...tracks];\n      const updatedCurrentStops = _.clone(currentStops);\n      const updatedCurrentStopsGeoJSON = _.clone(currentStopsGeoJSON);\n      let newHopIdx = -1;\n\n      // No drag for foot/car for now on.\n      if (!GRAPHHOPPER_MOTS.includes(currentMot)) {\n        const flatCoords = features\n          .map(f => f.getGeometry())\n          .map(lineString => {\n            return [\n              ...lineString.getFirstCoordinate(),\n              ...lineString.getLastCoordinate(),\n            ];\n          });\n\n        const closestSegment = this.routeVectorSource\n          .getClosestFeatureToCoordinate(this.initialRouteDrag.coordinate)\n          .getGeometry();\n\n        const closestEdges = [\n          ...closestSegment.getFirstCoordinate(),\n          ...closestSegment.getLastCoordinate(),\n        ];\n\n        flatCoords.forEach((segment, idx) => {\n          if (\n            segment.length === closestEdges.length &&\n            segment.every((value, index) => {\n              return value === closestEdges[index];\n            })\n          ) {\n            newHopIdx = idx + 1;\n          }\n        });\n      }\n\n      if (newHopIdx >= 0) {\n        updatedCurrentStops.splice(\n          newHopIdx,\n          0,\n          evt.mapBrowserEvent.coordinate,\n        );\n\n        newTracks.splice(newHopIdx, 0, '');\n\n        if (updatedCurrentStopsGeoJSON[newHopIdx]) {\n          const keys = Object.keys(updatedCurrentStopsGeoJSON).reverse();\n          keys.forEach(k => {\n            if (parseInt(k, 10) >= newHopIdx) {\n              updatedCurrentStopsGeoJSON[`${parseInt(k, 10) + 1}`] =\n                updatedCurrentStopsGeoJSON[k];\n            }\n            if (parseInt(k, 10) === newHopIdx) {\n              updatedCurrentStopsGeoJSON[newHopIdx] = {\n                type: 'FeatureCollection',\n                features: [\n                  {\n                    type: 'Feature',\n                    properties: {\n                      id: evt.mapBrowserEvent.coordinate.slice().reverse(),\n                      type: 'coordinates',\n                    },\n                    geometry: {\n                      type: 'Point',\n                      coordinates: evt.mapBrowserEvent.coordinate,\n                    },\n                  },\n                ],\n              };\n            }\n          });\n        }\n        onSetTracks(newTracks);\n        onSetCurrentStops(updatedCurrentStops);\n        onSetCurrentStopsGeoJSON(updatedCurrentStopsGeoJSON);\n      }\n      this.initialRouteDrag = null;\n    });\n\n    const interactions = defaultInteractions().extend([translate, modify]);\n    interactions.getArray().forEach(interaction => {\n      this.map.addInteraction(interaction);\n    });\n\n    this.onZoomRouteClick = () => {\n      let featExtent;\n      if (this.routeVectorSource.getFeatures().length) {\n        featExtent = this.routeVectorSource.getExtent();\n      }\n\n      if (featExtent.filter(f => Number.isFinite(f)).length === 4) {\n        this.map.getView().fit(this.routeVectorSource.getExtent(), {\n          size: this.map.getSize(),\n          duration: 500,\n          padding: [50, 50, 50, 50],\n        });\n      }\n    };\n\n    this.onPanViaClick = (item, idx) => {\n      const { currentStopsGeoJSON } = this.props;\n      if (currentStopsGeoJSON && currentStopsGeoJSON[idx]) {\n        const featureCoord = currentStopsGeoJSON[idx].features\n          ? currentStopsGeoJSON[idx].features[0].geometry.coordinates\n          : currentStopsGeoJSON[idx].geometry.coordinates;\n\n        this.map.getView().animate({\n          center: featureCoord,\n          duration: 500,\n          padding: [100, 100, 100, 100],\n        });\n      }\n    };\n\n    this.map.on('singleclick', evt => {\n      const { isFieldFocused, currentStops } = this.props;\n      // if one field empty or if a field is focused\n      if (currentStops.includes('') || isFieldFocused) {\n        onSetClickLocation(evt.coordinate);\n      }\n    });\n    this.map.on('pointermove', evt => {\n      const { currentMot } = this.props;\n\n      if (this.hoveredFeature) {\n        this.hoveredFeature = null;\n        this.setState({ hoveredStationOpen: false, hoveredStationName: '' });\n      }\n\n      if (this.hoveredRoute) {\n        this.routeVectorLayer.olLayer.setStyle(\n          lineStyleFunction(currentMot, false),\n        );\n        this.hoveredRoute = null;\n        this.setState({\n          hoveredPoint: null,\n        });\n      }\n      const hovFeats = this.map.getFeaturesAtPixel(evt.pixel, {\n        hitTolerance: 2,\n      });\n\n      hovFeats.forEach(feature => {\n        if (feature.getGeometry().getType() === 'Point') {\n          this.hoveredFeature = feature;\n          let name = '';\n          const featCountryCode = feature.get('country_code');\n          if (feature.get('name')) {\n            name = `${feature.get('name')}${\n              featCountryCode ? ` - ${featCountryCode}` : ''\n            }`;\n          } else {\n            name = `${to4326(feature.getGeometry().flatCoordinates)}`;\n          }\n          this.setState({\n            hoveredStationOpen: true,\n            hoveredStationName: name,\n          });\n        }\n        if (feature.getGeometry().getType() === 'LineString') {\n          this.hoveredRoute = feature;\n\n          this.setState({\n            hoveredPoint: evt.coordinate,\n          });\n        }\n        return true;\n      });\n    });\n  }\n\n  /**\n   * Perform the necessary actions when receiving updated props.\n   * If new stops are received, then remove any existing stops/routes and draw those stops/routes.\n   * @category Map\n   */\n  componentDidUpdate(prevProps) {\n    const { currentStopsGeoJSON, currentMot, tracks } = this.props;\n    const currentMotChanged = currentMot && currentMot !== prevProps.currentMot;\n    const tracksChanged = tracks !== prevProps.tracks;\n    const currentStopsGeoJSONChanged =\n      currentStopsGeoJSON &&\n      currentStopsGeoJSON !== prevProps.currentStopsGeoJSON;\n    if (currentMotChanged || currentStopsGeoJSONChanged || tracksChanged) {\n      this.markerVectorSource.clear();\n      Object.keys(currentStopsGeoJSON).forEach(key => {\n        this.markerVectorSource.addFeatures(\n          new GeoJSON().readFeatures(currentStopsGeoJSON[key]),\n        );\n        this.markerVectorSource\n          .getFeatures()\n          .forEach(f => f.setStyle(pointStyleFunction(currentMot)));\n      });\n      // Remove the old route if exists\n      this.routeVectorSource.clear();\n      this.setIsActiveRoute(false);\n\n      // Draw a new route if more than 1 stop is defined\n      if (Object.keys(currentStopsGeoJSON).length > 1) {\n        this.drawNewRoute();\n      }\n    }\n  }\n\n  onMapMoved = evt => {\n    const { center, onSetCenter } = this.props;\n    const newCenter = evt.map.getView().getCenter();\n    if (center[0] !== newCenter[0] || center[1] !== newCenter[1]) {\n      onSetCenter(newCenter);\n    }\n  };\n\n  /*\n   *  Highlight a point on the route.\n   */\n  onHighlightPoint(coords) {\n    const { currentMot } = this.props;\n\n    this.highlightVectorSource.clear();\n    const feat = new Feature({\n      geometry: new Point(coords),\n    });\n    feat.setStyle(pointStyleFunction(currentMot));\n    this.highlightVectorSource.addFeatures([feat]);\n  }\n\n  onFeaturesHover(features) {\n    if (this.mapRef) {\n      this.mapRef.current.node.current.style.cursor = features.length\n        ? 'pointer'\n        : 'inherit';\n    }\n  }\n\n  setIsActiveRoute(isActiveRoute) {\n    this.setState({ isActiveRoute });\n  }\n\n  /**\n   * After receiving the updated stops, send a call to the routingAPI to find a suitable route between\n   * two points/stations, if a route is found, it's returned and drawn to the map.\n   * @category Map\n   */\n  drawNewRoute = useElevation => {\n    const hops = [];\n    const {\n      currentStopsGeoJSON,\n      routingUrl,\n      currentMot,\n      APIKey,\n      resolveHops,\n      onShowNotification,\n      onSetShowLoadingBar,\n      onSetSelectedRoutes,\n      tracks,\n      isRouteInfoOpen,\n    } = this.props;\n\n    onSetShowLoadingBar(true);\n\n    Object.keys(currentStopsGeoJSON).forEach((key, idx) => {\n      if (currentStopsGeoJSON[key].features) {\n        // If the current item is a point selected on the map, not a station.\n        hops.push(\n          `${to4326(currentStopsGeoJSON[key].features[0].geometry.coordinates)\n            .slice()\n            .reverse()}`,\n        );\n      } else if (!GRAPHHOPPER_MOTS.includes(currentMot)) {\n        hops.push(\n          `!${currentStopsGeoJSON[key].properties.uid}${\n            tracks[idx] !== null\n              ? `${tracks[idx] ? `$${tracks[idx]}` : ''}`\n              : ''\n          }`,\n        );\n      } else {\n        hops.push(`${currentStopsGeoJSON[key].properties.name}`);\n      }\n    });\n\n    abortController.abort();\n    abortController = new AbortController();\n    const { signal } = abortController;\n\n    const calculateElevation = !!(isRouteInfoOpen || useElevation);\n    const reqUrl =\n      `${routingUrl}?via=${hops.join(\n        '|',\n      )}&mot=${currentMot}&resolve-hops=${resolveHops}&key=${APIKey}` +\n      `&elevation=${calculateElevation ? 1 : 0}` +\n      `&interpolate_elevation=${calculateElevation}` +\n      `&length=true&coord-radius=100.0&coord-punish=1000.0`;\n\n    return fetch(reqUrl, { signal })\n      .then(response => response.json())\n      .then(response => {\n        onSetShowLoadingBar(false);\n        if (response.error) {\n          onShowNotification(\"Couldn't find route\", 'error');\n          onSetSelectedRoutes([]);\n          return;\n        }\n        // A route was found, prepare to draw it.\n        this.routeVectorSource.clear();\n        const format = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857',\n        });\n        this.routeVectorSource.addFeatures(format.readFeatures(response));\n        this.setIsActiveRoute(!!this.routeVectorSource.getFeatures().length);\n        onSetSelectedRoutes(this.routeVectorSource.getFeatures());\n        this.routeVectorLayer.olLayer.setStyle(\n          lineStyleFunction(currentMot, false),\n        );\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          // eslint-disable-next-line no-console\n          console.warn(`Abort ${reqUrl}`);\n          return;\n        }\n        onSetShowLoadingBar(false);\n        onSetSelectedRoutes([]);\n        // It's important to rethrow all other errors so you don't silence them!\n        // For example, any error thrown by setState(), will pass through here.\n        throw err;\n      });\n  };\n\n  /**\n   * Render the map component to the dom\n   * @category Map\n   */\n  render() {\n    const {\n      center,\n      mots,\n      APIKey,\n      selectedRoutes,\n      isRouteInfoOpen,\n      stationSearchUrl,\n    } = this.props;\n\n    const {\n      isActiveRoute,\n      hoveredPoint,\n      hoveredStationOpen,\n      hoveredStationName,\n    } = this.state;\n\n    return (\n      <>\n        <RoutingMenu\n          mots={mots}\n          stationSearchUrl={stationSearchUrl}\n          isActiveRoute={isActiveRoute}\n          onZoomRouteClick={this.onZoomRouteClick}\n          onPanViaClick={this.onPanViaClick}\n          onDrawNewRoute={this.drawNewRoute}\n          APIKey={APIKey}\n        />\n        <Snackbar\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          open={hoveredStationOpen}\n          message={hoveredStationName}\n        />\n        <BasicMap\n          ref={this.mapRef}\n          center={center}\n          layers={this.layers}\n          onMapMoved={evt => this.onMapMoved(evt)}\n          onFeaturesHover={evt => this.onFeaturesHover(evt)}\n          zoom={zoom}\n          tabIndex={null}\n          map={this.map}\n          viewOptions={{\n            projection: this.projection,\n          }}\n        />\n        {isRouteInfoOpen && selectedRoutes.length ? (\n          <RouteInfosDialog\n            routes={selectedRoutes}\n            hoveredCoords={hoveredPoint}\n            onHighlightPoint={this.onHighlightPoint}\n            clearHighlightPoint={() => {\n              this.highlightVectorSource.clear();\n            }}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    center: state.MapReducer.center,\n    selectedRoutes: state.MapReducer.selectedRoutes,\n    isRouteInfoOpen: state.MapReducer.isRouteInfoOpen,\n    currentMot: state.MapReducer.currentMot,\n    currentStops: state.MapReducer.currentStops,\n    currentStopsGeoJSON: state.MapReducer.currentStopsGeoJSON,\n    isFieldFocused: state.MapReducer.isFieldFocused,\n    resolveHops: state.MapReducer.resolveHops,\n    olMap: state.MapReducer.olMap,\n    tracks: state.MapReducer.tracks,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetCenter: center => dispatch(actions.setCenter(center)),\n    onSetTracks: tracks => dispatch(actions.setTracks(tracks)),\n    onSetCurrentStops: currentStops =>\n      dispatch(actions.setCurrentStops(currentStops)),\n    onSetCurrentStopsGeoJSON: currentStopsGeoJSON =>\n      dispatch(actions.setCurrentStopsGeoJSON(currentStopsGeoJSON)),\n    onSetClickLocation: clickLocation =>\n      dispatch(actions.setClickLocation(clickLocation)),\n    onShowNotification: (notificationMessage, notificationType) =>\n      dispatch(actions.showNotification(notificationMessage, notificationType)),\n    onSetShowLoadingBar: showLoadingBar =>\n      dispatch(actions.setShowLoadingBar(showLoadingBar)),\n    onSetSelectedRoutes: selectedRoutes =>\n      dispatch(actions.setSelectedRoutes(selectedRoutes)),\n  };\n};\n\nMapComponent.defaultProps = {\n  center: [47.99822, 7.84049],\n};\n\nMapComponent.propTypes = {\n  center: propTypeCoordinates,\n  selectedRoutes: PropTypes.arrayOf(PropTypes.instanceOf(Feature)).isRequired,\n  isRouteInfoOpen: PropTypes.bool.isRequired,\n  mots: PropTypes.arrayOf(PropTypes.string).isRequired,\n  APIKey: PropTypes.string.isRequired,\n  stationSearchUrl: PropTypes.string.isRequired,\n  onSetCenter: PropTypes.func.isRequired,\n  onSetTracks: PropTypes.func.isRequired,\n  onSetClickLocation: PropTypes.func.isRequired,\n  onShowNotification: PropTypes.func.isRequired,\n  onSetShowLoadingBar: PropTypes.func.isRequired,\n  onSetSelectedRoutes: PropTypes.func.isRequired,\n  onSetCurrentStops: PropTypes.func.isRequired,\n  onSetCurrentStopsGeoJSON: PropTypes.func.isRequired,\n  currentStops: propTypeCurrentStops.isRequired,\n  currentStopsGeoJSON: propTypeCurrentStopsGeoJSON.isRequired,\n  isFieldFocused: PropTypes.bool.isRequired,\n  routingUrl: PropTypes.string.isRequired,\n  currentMot: PropTypes.string.isRequired,\n  resolveHops: PropTypes.bool.isRequired,\n  tracks: PropTypes.arrayOf(PropTypes.string).isRequired,\n  olMap: PropTypes.instanceOf(Map).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapComponent);\n","import MapComponent from './MapComponent';\n\nexport default MapComponent;\n","/* eslint-disable no-restricted-globals */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RSPermalink from 'react-spatial/components/Permalink';\nimport qs from 'query-string';\nimport { to4326, to3857 } from '../../utils';\nimport {\n  setCurrentStops,\n  setCurrentStopsGeoJSON,\n  setCurrentMot,\n  setCenter,\n  setResolveHops,\n  setTracks,\n} from '../../store/actions/Map';\n\nconst abortController = new AbortController();\nconst { signal } = abortController;\n\nconst validateUrlCoordinates = coordArray => {\n  /* Check if the x and y values are xy-coordinates */\n  if (\n    isFinite(coordArray[1]) &&\n    Math.abs(coordArray[1]) <= 90 &&\n    isFinite(coordArray[0]) &&\n    Math.abs(coordArray[0]) <= 180\n  ) {\n    return true;\n  }\n  return false;\n};\n\nconst getGeoJson = (viaString, APIKey, stationSearchUrl) => {\n  /* When the via is a pair of coordinates */\n  if (viaString.split(',').length > 1) {\n    let geoJson;\n    const coordArray = viaString\n      .split(',')\n      .filter(val => !isNaN(val))\n      .map(string => parseFloat(string));\n    if (coordArray.length === 2 && validateUrlCoordinates(coordArray)) {\n      /* Convert coordinates to 3857 */\n      const coords3857 = to3857(coordArray);\n      geoJson = {\n        type: 'FeatureCollection',\n        features: [\n          {\n            type: 'Feature',\n            properties: {\n              id: coords3857,\n              type: 'coordinates',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: coords3857,\n            },\n          },\n        ],\n      };\n    }\n    return Promise.resolve(geoJson);\n  }\n  let reqUrl;\n\n  /* When the via is a UID */\n  if (/^![a-zA-Z0-9]{16}$/.test(viaString)) {\n    reqUrl = `${stationSearchUrl}lookup/${viaString.replace(\n      '!',\n      '',\n    )}/?key=${APIKey}`;\n  } else {\n    /* search for the station. Remove ! in case it's an IBNR */\n    reqUrl = `${stationSearchUrl}?q=${viaString.replace(\n      '!',\n      '',\n    )}&key=${APIKey}`;\n  }\n\n  return fetch(reqUrl, { signal })\n    .then(response => response.json())\n    .then(response => {\n      /* Convert coordinates to 3857 */\n      const feature = response.features[0];\n      feature.geometry.coordinates = to3857(\n        response.features[0].geometry.coordinates,\n      );\n      return feature;\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.error('Failed to fetch geoJson');\n      return null;\n    });\n};\n\nconst compileViaString = (currentStopsGeoJson, tracks) => {\n  if (!currentStopsGeoJson || Object.keys(currentStopsGeoJson).length < 2) {\n    return null;\n  }\n\n  const uidStrings = Object.keys(currentStopsGeoJson).map((key, idx) => {\n    if (currentStopsGeoJson[key].features) {\n      return `${to4326(\n        currentStopsGeoJson[key].features[0].geometry.coordinates,\n      )}`;\n    }\n    return `!${currentStopsGeoJson[key].properties.uid}${\n      tracks[idx] ? `$${tracks[idx]}` : ''\n    }`;\n  });\n  return uidStrings.join('|');\n};\n\nfunction Permalink({ mots, APIKey, stationSearchUrl }) {\n  const dispatch = useDispatch();\n  const urlSearch = qs.parse(window.location.search);\n  const center = useSelector(state => state.MapReducer.center);\n  const tracks = useSelector(state => state.MapReducer.tracks);\n  const appState = useSelector(state => state.MapReducer);\n  const currentMot = useSelector(state => state.MapReducer.currentMot);\n  const currentStops = useSelector(state => state.MapReducer.currentStops);\n  const currentStopsGeoJSON = useSelector(\n    state => state.MapReducer.currentStopsGeoJSON,\n  );\n  const resolveHops = useSelector(state => state.MapReducer.resolveHops);\n  const map = appState.olMap;\n  const [params, setParams] = useState({});\n\n  /* Configure app on load using url params */\n  useEffect(() => {\n    const newParams = {};\n    if (urlSearch) {\n      if (urlSearch.z && !isNaN(parseFloat(urlSearch.z))) {\n        // Set zoom if defined\n        map.getView().setZoom(urlSearch.z);\n      }\n      if (\n        urlSearch.x &&\n        !isNaN(parseFloat(urlSearch.x)) &&\n        urlSearch.y &&\n        !isNaN(parseFloat(urlSearch.y))\n      ) {\n        // Set center if defined\n        dispatch(setCenter([parseFloat(urlSearch.x), parseFloat(urlSearch.y)]));\n      }\n\n      if (urlSearch.mot) {\n        // Set current mot if defined\n        const newMot = mots.find(mot => mot === urlSearch.mot) || mots[0];\n        newParams.mot = newMot;\n        dispatch(setCurrentMot(newMot));\n      }\n\n      if (urlSearch.via) {\n        // Set via stations if defined\n        newParams.via = urlSearch.via;\n        const viaArray = urlSearch.via.split('|');\n        const geoJsonArray = viaArray.map(viaString =>\n          getGeoJson(viaString.split('$')[0], APIKey, stationSearchUrl),\n        );\n        dispatch(\n          setTracks(\n            viaArray.map(stop => {\n              const track = stop.split('$')[1];\n              return track || '';\n            }),\n          ),\n        );\n\n        Promise.all(geoJsonArray).then(values => {\n          dispatch(\n            setCurrentStops(\n              values.map(stop => {\n                if (!stop) {\n                  return '';\n                }\n                if (stop.type === 'FeatureCollection') {\n                  return stop.features[0].geometry.coordinates;\n                }\n                return stop.properties.name;\n              }),\n            ),\n          );\n          const geoJsonObject = {};\n          values\n            .filter(stop => !!stop)\n            // eslint-disable-next-line no-return-assign\n            .forEach((stop, idx) => (geoJsonObject[`${idx}`] = stop));\n          dispatch(setCurrentStopsGeoJSON(geoJsonObject));\n        });\n      }\n\n      if (urlSearch['resolve-hops']) {\n        dispatch(setResolveHops(urlSearch['resolve-hops'] === 'true'));\n      }\n    }\n    setParams(newParams);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /* Update url params on app update */\n  useEffect(() => {\n    const newParams = {};\n    newParams.z = map.getView().getZoom();\n    [newParams.x] = center;\n    [, newParams.y] = center;\n    newParams.mot = currentMot;\n    newParams['resolve-hops'] = resolveHops;\n    if (Object.keys(currentStopsGeoJSON).length !== 0) {\n      newParams.via = compileViaString(currentStopsGeoJSON, tracks);\n    }\n    setParams(newParams);\n  }, [\n    currentMot,\n    currentStops,\n    currentStopsGeoJSON,\n    center,\n    resolveHops,\n    map,\n    tracks,\n  ]);\n\n  return <RSPermalink map={map} params={params} />;\n}\n\nPermalink.propTypes = {\n  mots: PropTypes.arrayOf(PropTypes.string).isRequired,\n  APIKey: PropTypes.string.isRequired,\n  stationSearchUrl: PropTypes.string.isRequired,\n};\n\nexport default Permalink;\n","import Permalink from './Permalink';\n\nexport default Permalink;\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { connect } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport { showNotification } from '../../store/actions';\n\n/**\n * The notification handler props\n * @typedef NotificationHandlerProps\n * @type {props}\n * @property {string} notificationMessage Obtained from the store, the message to be displayed. Can be any valid string.\n * @property {string} notificationType Obtained from the store, the message type (error, success, info, etc...)\n * @category Props\n */\n\n/**\n * Handles all application notification shown to the user\n * @category NotificationHandler\n */\nclass NotificationHandler extends React.Component {\n  /**\n   * Default constructor. visibility is set to false by default. Controlled through state property \"open\"\n   * @param {...NotificationHandlerProps} props Props received so that the component can function properly.\n   * @category NotificationHandler\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  /**\n   * If a new notification message is received, show it accordingly.\n   * @category NotificationHandler\n   */\n  componentDidUpdate(prevProps) {\n    const { notificationMessage } = this.props;\n    if (\n      notificationMessage &&\n      notificationMessage !== prevProps.notificationMessage\n    ) {\n      this.handleOpen();\n    }\n  }\n\n  /**\n   * Show the notification to the view.\n   * @category NotificationHandler\n   */\n  handleOpen = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  /**\n   * Hide the notification from the view.\n   * @category NotificationHandler\n   */\n  handleClose = () => {\n    const { onShowNotification } = this.props;\n    this.setState({\n      open: false,\n    });\n    onShowNotification(null, 'error');\n  };\n\n  /**\n   * Render the notification to the dom.\n   * @category NotificationHandler\n   */\n  render() {\n    const { notificationMessage, notificationType } = this.props;\n    const { open } = this.state;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={this.handleClose}\n      >\n        <Alert\n          onClose={this.handleClose}\n          severity={notificationType}\n          elevation={6}\n          variant=\"filled\"\n        >\n          {notificationMessage}\n        </Alert>\n      </Snackbar>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onShowNotification: (notificationMessage, notificationType) =>\n      dispatch(showNotification(notificationMessage, notificationType)),\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    notificationMessage: state.MapReducer.notificationMessage,\n    notificationType: state.MapReducer.notificationType,\n  };\n};\n\nNotificationHandler.propTypes = {\n  onShowNotification: PropTypes.func.isRequired,\n  notificationMessage: PropTypes.string.isRequired,\n  notificationType: PropTypes.string.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NotificationHandler);\n","import NotificationHandler from './NotificationHandler';\n\nexport default NotificationHandler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport MapComponent from '../MapComponent';\nimport Permalink from '../Permalink';\nimport NotificationHandler from '../NotificationHandler';\nimport { VALID_MOTS } from '../../constants';\n\nconst propTypes = {\n  routingUrl: PropTypes.string,\n  stationSearchUrl: PropTypes.string,\n  mots: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst defaultProps = {\n  mots: VALID_MOTS,\n  routingUrl: 'https://api.geops.io/routing/v1/',\n  stationSearchUrl: 'https://api.geops.io/stops/v1/',\n};\n\nconst fontSize = '1rem';\nconst color = '#515151';\nconst theme = createMuiTheme({\n  typography: {\n    body: { fontSize },\n    button: { fontSize },\n    h1: { fontSize: '1.2rem', color },\n    h2: { fontSize, color },\n    h3: { fontSize, color },\n    h4: { fontSize, color },\n    h5: { fontSize, color },\n    h6: { fontSize, color },\n  },\n});\n\n/**\n * Root component of the application that holds all other sub-components.\n * @param {string[]} mots List of mots to be available (ex: ['bus', 'train'])\n * @param {string} routingUrl The API routing url to be used for navigation.\n * @param {string} stationSearchUrl The API station search URL to be used for searching for stations.\n */\nfunction App(props) {\n  const { mots, routingUrl, stationSearchUrl } = props;\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Permalink\n        mots={mots}\n        APIKey={apiKey}\n        stationSearchUrl={stationSearchUrl}\n      />\n      <MapComponent\n        mots={mots}\n        routingUrl={routingUrl}\n        APIKey={apiKey}\n        stationSearchUrl={stationSearchUrl}\n      />\n      <NotificationHandler />\n    </ThemeProvider>\n  );\n}\n\nApp.propTypes = propTypes;\nApp.defaultProps = defaultProps;\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","import { Map } from 'ol';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  center: [949042.143189, 5899715.591163],\n  currentMot: 'rail',\n  currentStops: ['', ''],\n  currentStopsGeoJSON: {},\n  clickLocation: null,\n  notificationMessage: '',\n  notificationType: 'info',\n  isFieldFocused: false,\n  showLoadingBar: false,\n  selectedRoutes: [],\n  isRouteInfoOpen: false,\n  dialogPosition: {\n    x: 10,\n    y: 275,\n  },\n  olMap: new Map({\n    controls: [],\n  }),\n  resolveHops: false,\n  tracks: [null, null],\n};\n\nconst setCenter = (state, action) => {\n  const updatedState = {\n    center: action.center,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setCurrentStops = (state, action) => {\n  const updatedState = {\n    currentStops: action.currentStops,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setCurrentStopsGeoJSON = (state, action) => {\n  const updatedState = {\n    currentStopsGeoJSON: action.currentStopsGeoJSON,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setCurrentMot = (state, action) => {\n  const updatedState = {\n    currentMot: action.currentMot,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setClickLocation = (state, action) => {\n  const updatedState = {\n    clickLocation: action.clickLocation,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst showNotification = (state, action) => {\n  const updatedState = {\n    notificationMessage: action.notificationMessage,\n    notificationType: action.notificationType,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setIsFieldFocused = (state, action) => {\n  const updatedState = {\n    isFieldFocused: action.isFieldFocused,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setShowLoadingBar = (state, action) => {\n  const updatedState = {\n    showLoadingBar: action.showLoadingBar,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setSelectedRoutes = (state, action) => {\n  const updatedState = {\n    selectedRoutes: action.selectedRoutes,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setIsRouteInfoOpen = (state, action) => {\n  const updatedState = {\n    isRouteInfoOpen: action.isRouteInfoOpen,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setDialogPosition = (state, action) => {\n  const updatedState = {\n    dialogPosition: action.dialogPosition,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setResolveHops = (state, action) => {\n  const updatedState = {\n    resolveHops: action.resolveHops,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst setTracks = (state, action) => {\n  const updatedState = {\n    tracks: action.tracks,\n  };\n  return {\n    ...state,\n    ...updatedState,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CENTER:\n      return setCenter(state, action);\n    case actionTypes.SET_CURRENT_STOPS:\n      return setCurrentStops(state, action);\n    case actionTypes.SET_CURRENT_STOPS_GEOJSON:\n      return setCurrentStopsGeoJSON(state, action);\n    case actionTypes.SET_CURRENT_MOT:\n      return setCurrentMot(state, action);\n    case actionTypes.SET_CLICK_LOCATION:\n      return setClickLocation(state, action);\n    case actionTypes.SHOW_NOTIFICATION:\n      return showNotification(state, action);\n    case actionTypes.SET_IS_FIELD_FOCUSED:\n      return setIsFieldFocused(state, action);\n    case actionTypes.SET_SHOW_LOADING_BAR:\n      return setShowLoadingBar(state, action);\n    case actionTypes.SET_SELECTED_ROUTES:\n      return setSelectedRoutes(state, action);\n    case actionTypes.SET_IS_ROUTE_INFO_OPEN:\n      return setIsRouteInfoOpen(state, action);\n    case actionTypes.SET_DIALOG_POSITION:\n      return setDialogPosition(state, action);\n    case actionTypes.SET_RESOLVE_HOPS:\n      return setResolveHops(state, action);\n    case actionTypes.SET_TRACKS:\n      return setTracks(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport MapReducer from './reducers/Map';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({ MapReducer });\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              // eslint-disable-next-line no-console\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport default function register() {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import polyfills for ie 11\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport store from './store/store';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}